"""
–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π
"""

import discord
from discord.ext import commands
import logging
import json
import asyncio
from datetime import datetime, timedelta
from typing import Dict, List, Optional

logger = logging.getLogger(__name__)

class ChannelProtectionSystem:
    def __init__(self, bot):
        self.bot = bot
        self.protected_channels = {}  # ID –∫–∞–Ω–∞–ª–∞ -> –¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–∞
        self.deleted_channels = {}    # ID –∫–∞–Ω–∞–ª–∞ -> –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        self.punished_users = {}      # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> –≤—Ä–µ–º—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è
        self.backup_file = "channel_backups.json"
        self.ignored_category_ids = [1386751637330071695, 1383385103178268672]  # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è –∑–∞—â–∏—Ç–æ–π
        self.load_backups()
        
    def load_backups(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            with open(self.backup_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
                self.protected_channels = data.get('protected_channels', {})
                logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.protected_channels)} –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        except FileNotFoundError:
            logger.info("–§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π")
            self.save_backups()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: {e}")
    
    def save_backups(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ –≤ —Ñ–∞–π–ª"""
        try:
            data = {
                'protected_channels': self.protected_channels,
                'last_updated': datetime.now().isoformat()
            }
            with open(self.backup_file, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: {e}")
    
    async def backup_channel(self, channel: discord.TextChannel):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∫–∞–Ω–∞–ª–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ 100)
            messages = []
            async for message in channel.history(limit=100):
                messages.append({
                    'author_id': message.author.id,
                    'author_name': message.author.name,
                    'content': message.content,
                    'timestamp': message.created_at.isoformat(),
                    'attachments': [att.url for att in message.attachments],
                    'embeds': [embed.to_dict() for embed in message.embeds]
                })
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–∞
            channel_data = {
                'name': channel.name,
                'topic': channel.topic,
                'position': channel.position,
                'category_id': channel.category.id if channel.category else None,
                'overwrites': {str(target.id): overwrite._values for target, overwrite in channel.overwrites.items()},
                'slowmode_delay': channel.slowmode_delay,
                'nsfw': channel.nsfw,
                'messages': messages,
                'backup_time': datetime.now().isoformat()
            }
            
            self.protected_channels[str(channel.id)] = channel_data
            self.save_backups()
            logger.info(f"–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–∞–Ω–∞–ª–∞ {channel.name} (ID: {channel.id})")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∫–∞–Ω–∞–ª–∞ {channel.name}: {e}")
    
    async def restore_channel(self, guild: discord.Guild, channel_id: str) -> Optional[discord.TextChannel]:
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
        try:
            if channel_id not in self.protected_channels:
                logger.error(f"–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–∞–Ω–∞–ª–∞ {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return None
            
            channel_data = self.protected_channels[channel_id]
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
            overwrites = {}
            for target_id, overwrite_data in channel_data['overwrites'].items():
                target = guild.get_member(int(target_id)) or guild.get_role(int(target_id))
                if target:
                    overwrites[target] = discord.PermissionOverwrite(**overwrite_data)
            
            category = None
            if channel_data['category_id']:
                category = guild.get_channel(channel_data['category_id'])
            
            restored_channel = await guild.create_text_channel(
                name=channel_data['name'],
                topic=channel_data['topic'],
                position=channel_data['position'],
                category=category,
                overwrites=overwrites,
                slowmode_delay=channel_data['slowmode_delay'],
                nsfw=channel_data['nsfw']
            )
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            await self.restore_messages(restored_channel, channel_data['messages'])
            
            logger.info(f"–ö–∞–Ω–∞–ª {restored_channel.name} —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return restored_channel
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ {channel_id}: {e}")
            return None
    
    async def restore_messages(self, channel: discord.TextChannel, messages: List[Dict]):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ"""
        try:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
            for message_data in reversed(messages):
                try:
                    # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                    embed = discord.Embed(
                        title="üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                        description=message_data['content'],
                        color=0x00ff00,
                        timestamp=datetime.fromisoformat(message_data['timestamp'])
                    )
                    embed.set_author(
                        name=f"–ê–≤—Ç–æ—Ä: {message_data['author_name']}",
                        icon_url="https://cdn.discordapp.com/emojis/‚úÖ.png"
                    )
                    
                    if message_data['attachments']:
                        embed.add_field(
                            name="üìé –í–ª–æ–∂–µ–Ω–∏—è",
                            value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(message_data['attachments'])}",
                            inline=True
                        )
                    
                    if message_data['embeds']:
                        embed.add_field(
                            name="üîó –≠–º–±–µ–¥—ã",
                            value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(message_data['embeds'])}",
                            inline=True
                        )
                    
                    await channel.send(embed=embed)
                    
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                    await asyncio.sleep(0.5)
                    
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    continue
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ {channel.name}: {e}")
    
    async def punish_user(self, user: discord.Member, reason: str):
        """–ù–∞–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            original_roles = [role.id for role in user.roles if role.name != "@everyone"]
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ (–∫—Ä–æ–º–µ @everyone)
            roles_to_remove = [role for role in user.roles if role.name != "@everyone"]
            if roles_to_remove:
                await user.remove_roles(*roles_to_remove, reason=f"–ù–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: {reason}")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∫–∞–∑–∞–Ω–∏–∏
            punishment_end = datetime.now() + timedelta(hours=2)
            self.punished_users[user.id] = {
                'original_roles': original_roles,
                'punishment_end': punishment_end.isoformat(),
                'reason': reason
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            embed = discord.Embed(
                title="üö´ –ù–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
                description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–∞–∫–∞–∑–∞–Ω –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                color=0xff0000
            )
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
            embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value="2 —á–∞—Å–∞", inline=True)
            embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ", value="–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π", inline=True)
            embed.add_field(name="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", value=f"<t:{int(punishment_end.timestamp())}:R>", inline=False)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞–Ω–∞–ª
            system_channel = user.guild.system_channel
            if system_channel:
                await system_channel.send(embed=embed)
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} –Ω–∞–∫–∞–∑–∞–Ω –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}: {e}")
    
    async def restore_user_roles(self, user: discord.Member):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è"""
        try:
            if user.id not in self.punished_users:
                return
            
            punishment_data = self.punished_users[user.id]
            original_roles = punishment_data['original_roles']
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª–∏
            roles_to_add = []
            for role_id in original_roles:
                role = user.guild.get_role(role_id)
                if role and role not in user.roles:
                    roles_to_add.append(role)
            
            if roles_to_add:
                await user.add_roles(*roles_to_add, reason="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ—Å–ª–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è")
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö
            del self.punished_users[user.id]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            embed = discord.Embed(
                title="‚úÖ –†–æ–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã",
                description=f"–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã",
                color=0x00ff00
            )
            
            system_channel = user.guild.system_channel
            if system_channel:
                await system_channel.send(embed=embed)
            
            logger.info(f"–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}: {e}")
    
    async def check_punishments(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è"""
        while True:
            try:
                current_time = datetime.now()
                users_to_restore = []
                
                for user_id, punishment_data in self.punished_users.items():
                    punishment_end = datetime.fromisoformat(punishment_data['punishment_end'])
                    if current_time >= punishment_end:
                        users_to_restore.append(user_id)
                
                for user_id in users_to_restore:
                    guild = self.bot.get_guild(1375772175373566012)  # ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
                    if guild:
                        user = guild.get_member(user_id)
                        if user:
                            await self.restore_user_roles(user)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                await asyncio.sleep(300)
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–π: {e}")
                await asyncio.sleep(60)
    
    async def setup_protection(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –∑–∞—â–∏—Ç—ã"""
        try:
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
            guild = self.bot.get_guild(1375772175373566012)  # ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            if not guild:
                logger.error("–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            important_channels = [
                1385303735281914011,  # –ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
                1375826419158089751,  # –ö–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏
                1375818535141376030,  # –ó–∞—è–≤–∫–∏ –≤ Minecraft –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é
                1375818773994537001,  # –ó–∞—è–≤–∫–∏ –≤ Discord –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é
                1383490270850584707,  # –ö–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
            ]
            
            for channel_id in important_channels:
                channel = guild.get_channel(channel_id)
                if channel:
                    await self.backup_channel(channel)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–∫–∞–∑–∞–Ω–∏–π
            asyncio.create_task(self.check_punishments())
            
            logger.info("–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã: {e}")

async def setup_channel_protection(bot):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤"""
    try:
        protection_system = ChannelProtectionSystem(bot)
        bot.channel_protection = protection_system
        
        @bot.event
        async def on_guild_channel_delete(channel):
            """–°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
            try:
                # –ò—Å–∫–ª—é—á–∞–µ–º –∫–∞–Ω–∞–ª—ã –∏–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                if channel.category_id in protection_system.ignored_category_ids:
                    logger.info(f"–ö–∞–Ω–∞–ª {channel.name} (ID: {channel.id}) –±—ã–ª –≤ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∑–∞—â–∏—Ç–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è.")
                    return
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª –∑–∞—â–∏—â–µ–Ω–Ω—ã–º
                if str(channel.id) in protection_system.protected_channels:
                    logger.warning(f"üö® –£–î–ê–õ–ï–ù –ó–ê–©–ò–©–ï–ù–ù–´–ô –ö–ê–ù–ê–õ: {channel.name} (ID: {channel.id})")
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ —É–¥–∞–ª–∏–ª –∫–∞–Ω–∞–ª
                    async for entry in channel.guild.audit_logs(action=discord.AuditLogAction.channel_delete, limit=1):
                        if entry.target.id == channel.id:
                            user = entry.user
                            reason = f"–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ {channel.name}"
                            # –ù–∞–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            await protection_system.punish_user(user, reason)
                            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª
                            restored_channel = await protection_system.restore_channel(channel.guild, str(channel.id))
                            if restored_channel:
                                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
                                embed = discord.Embed(
                                    title="üõ°Ô∏è –ö–∞–Ω–∞–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                                    description=f"–ó–∞—â–∏—â–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª {restored_channel.mention} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                                    color=0x00ff00
                                )
                                embed.add_field(name="–£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", value=user.mention, inline=True)
                                embed.add_field(name="–í—Ä–µ–º—è", value=f"<t:{int(datetime.now().timestamp())}:F>", inline=True)
                                system_channel = channel.guild.system_channel
                                if system_channel:
                                    await system_channel.send(embed=embed)
                            break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∑–∞—â–∏—Ç—ã
        await protection_system.setup_protection()
        
        logger.info("–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤: {e}") 