
"""
–°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤ –¥–ª—è Discord –±–æ—Ç–∞
–ü–æ–∑–≤–æ–ª—è–µ—Ç –º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤–º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥ –≤ —á–∞—Ç–µ
"""

import discord
from discord.ext import commands
import asyncio
import logging
from datetime import datetime, timedelta
import re
from config import LIMONERICX_SERVER_ID

logger = logging.getLogger('mute_system')

# ID —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –º—É—Ç–∏—Ç—å
MUTE_ROLES = [
    1376140341417349142,  # –ü–µ—Ä–≤–∞—è —Ä–æ–ª—å
    1376140589443190855,  # –í—Ç–æ—Ä–∞—è —Ä–æ–ª—å  
    1376140769831817318   # –¢—Ä–µ—Ç—å—è —Ä–æ–ª—å
]

class MuteModal(discord.ui.Modal, title='–ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'):
    def __init__(self, target_user):
        super().__init__()
        self.target_user = target_user
        
    time = discord.ui.TextInput(
        label='–í—Ä–µ–º—è –º—É—Ç–∞',
        placeholder='–ù–∞–ø—Ä–∏–º–µ—Ä: 30–º, 2—á, 1–¥, 5—Å...',
        required=True,
        max_length=10
    )
    
    reason = discord.ui.TextInput(
        label='–ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞',
        placeholder='–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –º—É—Ç–∞...',
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=500
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            mute_system = interaction.client.mute_system
            
            # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è
            mute_seconds = mute_system.parse_time(self.time.value)
            if mute_seconds <= 0:
                await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 30–º, 2—á, 1–¥ –∏ —Ç.–¥.", ephemeral=True)
                return

            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º—É—Ç–∞ - 30 –¥–Ω–µ–π
            if mute_seconds > 30 * 86400:
                await interaction.response.send_message("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º—É—Ç–∞ - 30 –¥–Ω–µ–π!", ephemeral=True)
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–º—É—á–µ–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if mute_system.muted_role in self.target_user.roles:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–º—É—á–µ–Ω!", ephemeral=True)
                return

            # –ú—É—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await self.target_user.add_roles(mute_system.muted_role, reason=f"–ú—É—Ç –æ—Ç {interaction.user}: {self.reason.value}")

            # –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º—É—Ç–µ
            embed = discord.Embed(
                title="üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω",
                color=0xff6b6b,
                timestamp=datetime.now()
            )

            embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=self.target_user.mention, inline=True)
            embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            embed.add_field(name="‚è∞ –í—Ä–µ–º—è", value=mute_system.format_time(mute_seconds), inline=True)
            embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=self.reason.value, inline=False)

            # –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –º—É—Ç–∞
            end_time = datetime.now() + timedelta(seconds=mute_seconds)
            embed.add_field(
                name="üïê –û–∫–æ–Ω—á–∞–Ω–∏–µ –º—É—Ç–∞",
                value=f"<t:{int(end_time.timestamp())}:F>",
                inline=False
            )

            await interaction.response.send_message(embed=embed)

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –õ–°
            try:
                dm_embed = discord.Embed(
                    title="üîá –í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã",
                    description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{interaction.guild.name}**",
                    color=0xff6b6b
                )
                dm_embed.add_field(name="‚è∞ –í—Ä–µ–º—è", value=mute_system.format_time(mute_seconds), inline=True)
                dm_embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=self.reason.value, inline=True)
                dm_embed.add_field(name="üïê –û–∫–æ–Ω—á–∞–Ω–∏–µ", value=f"<t:{int(end_time.timestamp())}:F>", inline=False)

                await self.target_user.send(embed=dm_embed)
            except discord.Forbidden:
                pass  # –ù–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°

            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–Ω—è—Ç–∏—è –º—É—Ç–∞
            asyncio.create_task(mute_system._auto_unmute(self.target_user, mute_seconds, interaction.guild.name))

            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.target_user.name} –∑–∞–º—É—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.name} –Ω–∞ {mute_system.format_time(mute_seconds)}")

        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –º—É—Ç–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)

class UnmuteModal(discord.ui.Modal, title='–†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'):
    def __init__(self, target_user):
        super().__init__()
        self.target_user = target_user
        
    reason = discord.ui.TextInput(
        label='–ü—Ä–∏—á–∏–Ω–∞ —Ä–∞–∑–º—É—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)',
        placeholder='–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Ä–∞–∑–º—É—Ç–∞...',
        required=False,
        max_length=200
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            mute_system = interaction.client.mute_system
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–º—É—á–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if mute_system.muted_role not in self.target_user.roles:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–º—É—á–µ–Ω!", ephemeral=True)
                return

            # –†–∞–∑–º—É—á–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await self.target_user.remove_roles(mute_system.muted_role, reason=f"–†–∞–∑–º—É—Ç –æ—Ç {interaction.user}: {self.reason.value or '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}")

            # –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞–∑–º—É—Ç–µ
            embed = discord.Embed(
                title="üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω",
                color=0x00ff00,
                timestamp=datetime.now()
            )

            embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=self.target_user.mention, inline=True)
            embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            
            if self.reason.value:
                embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=self.reason.value, inline=False)

            await interaction.response.send_message(embed=embed)

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –õ–°
            try:
                dm_embed = discord.Embed(
                    title="üîä –í–∞—Å —Ä–∞–∑–º—É—Ç–∏–ª–∏",
                    description=f"–í–∞—à –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{interaction.guild.name}** –±—ã–ª —Å–Ω—è—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º",
                    color=0x00ff00
                )
                if self.reason.value:
                    dm_embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=self.reason.value, inline=False)
                await self.target_user.send(embed=dm_embed)
            except discord.Forbidden:
                pass  # –ù–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°

            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.target_user.name} —Ä–∞–∑–º—É—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.name}")

        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)

class UserSelectView(discord.ui.View):
    def __init__(self, action_type):
        super().__init__(timeout=300)
        self.action_type = action_type  # "mute" –∏–ª–∏ "unmute"
    
    @discord.ui.select(
        cls=discord.ui.UserSelect,
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",
        min_values=1,
        max_values=1
    )
    async def select_user(self, interaction: discord.Interaction, select: discord.ui.UserSelect):
        selected_user = select.values[0]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª —Å–∞–º —Å–µ–±—è
        if selected_user == interaction.user:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å/—Ä–∞–∑–º—É—Ç–∏—Ç—å —Å–∞–º–∏ —Å–µ–±—è!", ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –±–æ—Ç–∞
        if selected_user.bot:
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –º—É—Ç–∏—Ç—å/—Ä–∞–∑–º—É—Ç–∏—Ç—å –±–æ—Ç–æ–≤!", ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π
        member = interaction.guild.get_member(selected_user.id)
        if member and any(role.id in MUTE_ROLES for role in member.roles):
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –º—É—Ç–∏—Ç—å/—Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∞–≤–∞–º–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞!", ephemeral=True)
            return

        if self.action_type == "mute":
            modal = MuteModal(member)
        else:
            modal = UnmuteModal(member)
        
        await interaction.response.send_modal(modal)

class MuteControlView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label='üîá –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', style=discord.ButtonStyle.danger)
    async def mute_user_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not any(role.id in MUTE_ROLES for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!", ephemeral=True)
            return
        
        view = UserSelectView("mute")
        embed = discord.Embed(
            title="üîá –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º—É—Ç–∞",
            description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å:",
            color=0xff6b6b
        )
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    @discord.ui.button(label='üîä –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', style=discord.ButtonStyle.success)
    async def unmute_user_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not any(role.id in MUTE_ROLES for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!", ephemeral=True)
            return
        
        view = UserSelectView("unmute")
        embed = discord.Embed(
            title="üîä –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∞",
            description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å:",
            color=0x00ff00
        )
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

class MuteSystem:
    def __init__(self, bot):
        self.bot = bot
        self.guild_id = LIMONERICX_SERVER_ID
        self.mute_channel = None
        self.muted_role = None

    async def setup(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤"""
        guild = self.bot.get_guild(self.guild_id)
        if not guild:
            logger.error(f"–°–µ—Ä–≤–µ—Ä —Å ID {self.guild_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª "üîá„Éª–º—É—Ç—ã"
        channel_name = "üîá„Éª–º—É—Ç—ã"
        existing_channel = discord.utils.get(guild.channels, name=channel_name)

        if not existing_channel:
            try:
                # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
                overwrites = {
                    guild.default_role: discord.PermissionOverwrite(view_channel=False),
                    guild.me: discord.PermissionOverwrite(
                        view_channel=True,
                        send_messages=True,
                        manage_messages=True
                    )
                }

                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –º—É—Ç–∏—Ç—å
                for role_id in MUTE_ROLES:
                    role = guild.get_role(role_id)
                    if role:
                        overwrites[role] = discord.PermissionOverwrite(
                            view_channel=True,
                            send_messages=True
                        )

                self.mute_channel = await guild.create_text_channel(
                    channel_name,
                    overwrites=overwrites,
                    topic="–ö–∞–Ω–∞–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—ã"
                )
                logger.info(f"–°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª –º—É—Ç–æ–≤: {self.mute_channel.name}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –º—É—Ç–æ–≤: {e}")
                return
        else:
            self.mute_channel = existing_channel
            logger.info(f"–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª –º—É—Ç–æ–≤: {self.mute_channel.name}")

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º —Ä–æ–ª—å "Muted"
        muted_role = discord.utils.get(guild.roles, name="Muted")
        if not muted_role:
            try:
                muted_role = await guild.create_role(
                    name="Muted",
                    color=discord.Color.dark_gray(),
                    reason="–†–æ–ª—å –¥–ª—è –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
                )

                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ —Ä–æ–ª–∏ –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö
                for channel in guild.channels:
                    try:
                        if isinstance(channel, discord.TextChannel):
                            await channel.set_permissions(
                                muted_role,
                                send_messages=False,
                                add_reactions=False,
                                create_public_threads=False,
                                create_private_threads=False,
                                send_messages_in_threads=False
                            )
                        elif isinstance(channel, discord.VoiceChannel):
                            await channel.set_permissions(
                                muted_role,
                                speak=False,
                                use_voice_activation=False
                            )
                    except discord.Forbidden:
                        logger.warning(f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ {channel.name}")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ {channel.name}: {e}")

                logger.info("–°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å Muted —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø—Ä–∞–≤")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–æ–ª–∏ Muted: {e}")
                return

        self.muted_role = muted_role

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
        if self.mute_channel:
            await self.send_mute_panel()

    async def send_mute_panel(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É—Ç–∞–º–∏"""
        embed = discord.Embed(
            title="üîá –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É—Ç–∞–º–∏",
            description="**–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—ã!**\n\n–¢–µ–ø–µ—Ä—å –¥–ª—è –º—É—Ç–∞ –∏ —Ä–∞–∑–º—É—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —É–¥–æ–±–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤–º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥ –≤ —á–∞—Ç–µ.",
            color=0xff6b6b
        )

        embed.add_field(
            name="üÜï –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:",
            value="‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **üîá –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**\n‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞\n‚Ä¢ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –≤—Ä–µ–º–µ–Ω–µ–º –∏ –ø—Ä–∏—á–∏–Ω–æ–π\n‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –º—É—Ç",
            inline=False
        )

        embed.add_field(
            name="‚è∞ –§–æ—Ä–º–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏:",
            value="‚Ä¢ `5–º` –∏–ª–∏ `5min` - 5 –º–∏–Ω—É—Ç\n‚Ä¢ `2—á` –∏–ª–∏ `2h` - 2 —á–∞—Å–∞\n‚Ä¢ `1–¥` –∏–ª–∏ `1d` - 1 –¥–µ–Ω—å\n‚Ä¢ `30—Å` –∏–ª–∏ `30s` - 30 —Å–µ–∫—É–Ω–¥",
            inline=False
        )

        embed.add_field(
            name="‚ú® –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:",
            value="‚Ä¢ –£–¥–æ–±–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤\n‚Ä¢ –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            inline=False
        )

        embed.add_field(
            name="üîë –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:",
            value="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –º—É—Ç–æ–≤ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.",
            inline=False
        )

        embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ")

        view = MuteControlView()

        # –û—á–∏—â–∞–µ–º –∫–∞–Ω–∞–ª –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
        try:
            async for message in self.mute_channel.history(limit=10):
                if message.author == self.bot.user:
                    await message.delete()
        except:
            pass

        await self.mute_channel.send(embed=embed, view=view)

    def parse_time(self, time_str):
        """–ü–∞—Ä—Å–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏"""
        time_regex = re.compile(r'(\d+)([—Å–º—á–¥smhd])')
        matches = time_regex.findall(time_str.lower())

        total_seconds = 0
        for amount, unit in matches:
            amount = int(amount)
            if unit in ['—Å', 's']:
                total_seconds += amount
            elif unit in ['–º', 'm']:
                total_seconds += amount * 60
            elif unit in ['—á', 'h']:
                total_seconds += amount * 3600
            elif unit in ['–¥', 'd']:
                total_seconds += amount * 86400

        return total_seconds

    def format_time(self, seconds):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
        if seconds < 60:
            return f"{seconds} —Å–µ–∫."
        elif seconds < 3600:
            return f"{seconds // 60} –º–∏–Ω."
        elif seconds < 86400:
            hours = seconds // 3600
            minutes = (seconds % 3600) // 60
            if minutes > 0:
                return f"{hours} —á. {minutes} –º–∏–Ω."
            return f"{hours} —á."
        else:
            days = seconds // 86400
            hours = (seconds % 86400) // 3600
            if hours > 0:
                return f"{days} –¥. {hours} —á."
            return f"{days} –¥."

    async def _auto_unmute(self, user, mute_seconds, guild_name):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
        try:
            await asyncio.sleep(mute_seconds)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –µ—â–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –∑–∞–º—É—á–µ–Ω
            if self.muted_role in user.roles:
                await user.remove_roles(self.muted_role, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞")

                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞
                unmute_embed = discord.Embed(
                    title="üîä –ú—É—Ç —Å–Ω—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
                    description=f"–ú—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –∏—Å—Ç–µ–∫",
                    color=0x00ff00,
                    timestamp=datetime.now()
                )
                await self.mute_channel.send(embed=unmute_embed)

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    dm_embed = discord.Embed(
                        title="üîä –ú—É—Ç —Å–Ω—è—Ç",
                        description=f"–í–∞—à –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{guild_name}** –∏—Å—Ç–µ–∫",
                        color=0x00ff00
                    )
                    await user.send(embed=dm_embed)
                except discord.Forbidden:
                    pass
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –õ–° –æ —Ä–∞–∑–º—É—Ç–µ: {e}")
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞: {e}")

async def setup_mute_system(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤"""
    try:
        mute_system = MuteSystem(bot)
        await mute_system.setup()

        bot.mute_system = mute_system
        logger.info("–°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤: {e}")
