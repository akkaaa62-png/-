"""
–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤ –∏ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è Discord –±–æ—Ç–∞
–ó–∞—â–∏—â–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –æ—Ç —Å–ø–∞–º–∞, –º–∞—Å—Å–æ–≤—ã—Ö –±–∞–Ω–æ–≤, –º—É—Ç–æ–≤ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤
"""

import discord
from discord.ext import commands, tasks
import logging
import asyncio
from datetime import datetime, timedelta
from collections import defaultdict, deque
from config import LIMONERICX_SERVER_ID

logger = logging.getLogger('raid_protection')

class RaidProtection:
    def __init__(self, bot):
        self.bot = bot
        self.guild_id = LIMONERICX_SERVER_ID
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã
        self.MAX_JOINS_PER_MINUTE = 10  # –ú–∞–∫—Å–∏–º—É–º –≤—Ö–æ–¥–æ–≤ –≤ –º–∏–Ω—É—Ç—É
        self.MAX_MESSAGES_PER_MINUTE = 20  # –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç—É –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.MAX_BANS_PER_HOUR = 5  # –ú–∞–∫—Å–∏–º—É–º –±–∞–Ω–æ–≤ –≤ —á–∞—Å –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        self.MAX_KICKS_PER_HOUR = 10  # –ú–∞–∫—Å–∏–º—É–º –∫–∏–∫–æ–≤ –≤ —á–∞—Å
        self.MAX_MUTES_PER_HOUR = 15  # –ú–∞–∫—Å–∏–º—É–º –º—É—Ç–æ–≤ –≤ —á–∞—Å
        self.MAX_CHANNEL_DELETIONS_PER_HOUR = 3  # –ú–∞–∫—Å–∏–º—É–º —É–¥–∞–ª–µ–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤ –≤ —á–∞—Å
        
        # –•—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        self.join_times = deque()
        self.user_messages = defaultdict(lambda: deque())
        self.moderator_actions = defaultdict(lambda: {
            'bans': deque(),
            'kicks': deque(), 
            'mutes': deque(),
            'channel_deletions': deque()
        })
        
        # –°—Ç–∞—Ç—É—Å—ã —Ä–µ–π–¥–∞
        self.raid_mode = False
        self.lockdown_mode = False
        
        # –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏ (–Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
        self.protected_roles = [
            1375794448650342521,  # –†–æ–ª—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
            # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —Ä–æ–ª–∏
        ]
        
        # –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        self.security_log_channel_id = None  # –ë—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        
        self.cleanup_task.start()
    
    def cleanup_old_data(self):
        """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏"""
        now = datetime.now()
        cutoff_time = now - timedelta(hours=1)
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω –≤—Ö–æ–¥–∞
        while self.join_times and self.join_times[0] < cutoff_time:
            self.join_times.popleft()
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for user_id in list(self.user_messages.keys()):
            messages = self.user_messages[user_id]
            while messages and messages[0] < cutoff_time:
                messages.popleft()
            if not messages:
                del self.user_messages[user_id]
        
        # –û—á–∏—Å—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        for mod_id in list(self.moderator_actions.keys()):
            actions = self.moderator_actions[mod_id]
            for action_type in actions:
                while actions[action_type] and actions[action_type][0] < cutoff_time:
                    actions[action_type].popleft()
    
    @tasks.loop(minutes=10)
    async def cleanup_task(self):
        """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
        self.cleanup_old_data()
    
    async def get_security_log_channel(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        if not self.security_log_channel_id:
            guild = self.bot.get_guild(self.guild_id)
            if guild:
                # –ò—â–µ–º –∫–∞–Ω–∞–ª —Å –∏–º–µ–Ω–µ–º "security" –∏–ª–∏ "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
                for channel in guild.channels:
                    if any(word in channel.name.lower() for word in ['security', '–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', 'logs', '–ª–æ–≥–∏']):
                        self.security_log_channel_id = channel.id
                        break
        
        return self.bot.get_channel(self.security_log_channel_id) if self.security_log_channel_id else None
    
    async def log_security_event(self, title, description, color=0xff0000, fields=None):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        try:
            channel = await self.get_security_log_channel()
            if not channel:
                logger.warning("–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            embed = discord.Embed(
                title=f"üõ°Ô∏è {title}",
                description=description,
                color=color,
                timestamp=datetime.now()
            )
            
            if fields:
                for field in fields:
                    embed.add_field(
                        name=field.get('name', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
                        value=field.get('value', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'),
                        inline=field.get('inline', False)
                    )
            
            await channel.send(embed=embed)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {e}")
    
    async def check_raid_joins(self, member):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–π–¥ –ø–æ –≤—Ö–æ–¥–∞–º"""
        now = datetime.now()
        self.join_times.append(now)
        
        # –ü–æ–¥—Å—á–µ—Ç –≤—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É
        cutoff = now - timedelta(minutes=1)
        recent_joins = sum(1 for join_time in self.join_times if join_time > cutoff)
        
        if recent_joins > self.MAX_JOINS_PER_MINUTE and not self.raid_mode:
            await self.enable_raid_mode()
            await self.log_security_event(
                "–û–ë–ù–ê–†–£–ñ–ï–ù –†–ï–ô–î",
                f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {recent_joins} –≤—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞.",
                color=0xff0000,
                fields=[
                    {"name": "–í—Ö–æ–¥–æ–≤ –∑–∞ –º–∏–Ω—É—Ç—É", "value": str(recent_joins), "inline": True},
                    {"name": "–õ–∏–º–∏—Ç", "value": str(self.MAX_JOINS_PER_MINUTE), "inline": True}
                ]
            )
    
    async def enable_raid_mode(self):
        """–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞"""
        if self.raid_mode:
            return
        
        self.raid_mode = True
        guild = self.bot.get_guild(self.guild_id)
        
        if guild:
            try:
                # –ü–æ–≤—ã—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                await guild.edit(verification_level=discord.VerificationLevel.high)
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è @everyone
                everyone_role = guild.default_role
                permissions = everyone_role.permissions
                permissions.create_instant_invite = False
                await everyone_role.edit(permissions=permissions)
                
                logger.info("–†–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
                await asyncio.sleep(1800)  # 30 –º–∏–Ω—É—Ç
                await self.disable_raid_mode()
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ —Ä–µ–π–¥–∞: {e}")
    
    async def disable_raid_mode(self):
        """–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞"""
        if not self.raid_mode:
            return
        
        self.raid_mode = False
        guild = self.bot.get_guild(self.guild_id)
        
        if guild:
            try:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                await guild.edit(verification_level=discord.VerificationLevel.medium)
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                everyone_role = guild.default_role
                permissions = everyone_role.permissions
                permissions.create_instant_invite = True
                await everyone_role.edit(permissions=permissions)
                
                await self.log_security_event(
                    "–†–ï–ñ–ò–ú –†–ï–ô–î–ê –û–¢–ö–õ–Æ–ß–ï–ù",
                    "–†–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω.",
                    color=0x00ff00
                )
                
                logger.info("–†–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω")
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ —Ä–µ–π–¥–∞: {e}")
    
    async def check_message_spam(self, message):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
        if message.author.bot:
            return
        
        now = datetime.now()
        user_id = message.author.id
        
        self.user_messages[user_id].append(now)
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É
        cutoff = now - timedelta(minutes=1)
        recent_messages = sum(1 for msg_time in self.user_messages[user_id] if msg_time > cutoff)
        
        if recent_messages > self.MAX_MESSAGES_PER_MINUTE:
            await self.handle_spam_user(message.author, recent_messages)
    
    async def handle_spam_user(self, user, message_count):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-—Å–ø–∞–º–µ—Ä–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–º
            if any(role.id in self.protected_roles for role in user.roles):
                return
            
            # –ú—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç
            mute_role = discord.utils.get(user.guild.roles, name="Muted")
            if mute_role:
                await user.add_roles(mute_role, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º—É—Ç –∑–∞ —Å–ø–∞–º")
                
                await self.log_security_event(
                    "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–ú–£–ß–ï–ù –ó–ê –°–ü–ê–ú",
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º—É—á–µ–Ω –∑–∞ —Å–ø–∞–º.",
                    color=0xffa500,
                    fields=[
                        {"name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": f"{user.mention} ({user.id})", "inline": True},
                        {"name": "–°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –º–∏–Ω—É—Ç—É", "value": str(message_count), "inline": True},
                        {"name": "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞", "value": "10 –º–∏–Ω—É—Ç", "inline": True}
                    ]
                )
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
                await asyncio.sleep(600)
                try:
                    await user.remove_roles(mute_role, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞")
                except:
                    pass
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ —Å–ø–∞–º–µ—Ä–∞: {e}")
    
    async def check_moderator_actions(self, moderator, action_type):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        now = datetime.now()
        mod_id = moderator.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        guild = self.bot.get_guild(self.guild_id)
        if guild:
            member = guild.get_member(mod_id)
            if member and member.guild_permissions.administrator:
                # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã
                return
        
        self.moderator_actions[mod_id][action_type].append(now)
        
        # –ü–æ–¥—Å—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
        cutoff = now - timedelta(hours=1)
        recent_actions = sum(1 for action_time in self.moderator_actions[mod_id][action_type] if action_time > cutoff)
        
        limits = {
            'bans': self.MAX_BANS_PER_HOUR,
            'kicks': self.MAX_KICKS_PER_HOUR,
            'mutes': self.MAX_MUTES_PER_HOUR,
            'channel_deletions': self.MAX_CHANNEL_DELETIONS_PER_HOUR
        }
        
        current_limit = limits.get(action_type, 999)
        
        if recent_actions > current_limit:
            # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞
            await self.log_security_event(
                f"–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢ –î–ï–ô–°–¢–í–ò–ô –ú–û–î–ï–†–ê–¢–û–†–ê",
                f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {moderator.mention} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π —Ç–∏–ø–∞ '{action_type}'.",
                color=0xff6600,
                fields=[
                    {"name": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "value": f"{moderator.mention} ({moderator.id})", "inline": True},
                    {"name": "–¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è", "value": action_type, "inline": True},
                    {"name": "–î–µ–π—Å—Ç–≤–∏–π –∑–∞ —á–∞—Å", "value": f"{recent_actions}/{current_limit}", "inline": True}
                ]
            )
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤
            await self.handle_moderator_limit_exceeded(moderator, action_type, recent_actions, current_limit)
    
    async def handle_moderator_limit_exceeded(self, moderator, action_type, actions_count, limit):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        try:
            guild = self.bot.get_guild(self.guild_id)
            if not guild:
                return
            
            member = guild.get_member(moderator.id)
            if not member:
                return
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–π
            if action_type == 'bans' and actions_count > limit:
                # –ë–∞–Ω—ã - —Å–∞–º—ã–µ —Å–µ—Ä—å–µ–∑–Ω—ã–µ, –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–∞–≤–∞
                await self.temporarily_disable_moderator(member, 'bans', 2)  # 2 —á–∞—Å–∞
                
            elif action_type == 'kicks' and actions_count > limit:
                # –ö–∏–∫–∏ - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
                await self.warn_moderator(member, 'kicks')
                await self.temporarily_disable_moderator(member, 'kicks', 1)  # 1 —á–∞—Å
                
            elif action_type == 'mutes' and actions_count > limit:
                # –ú—É—Ç—ã - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                await self.warn_moderator(member, 'mutes')
                
            elif action_type == 'channel_deletions' and actions_count > limit:
                # –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ - —Å–µ—Ä—å–µ–∑–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ
                await self.temporarily_disable_moderator(member, 'channel_deletions', 4)  # 4 —á–∞—Å–∞
                
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            await self.notify_administrators(moderator, action_type, actions_count, limit)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
    
    async def temporarily_disable_moderator(self, member, action_type, hours):
        """–í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ä–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏)
            mod_role = None
            for role in member.roles:
                if role.permissions.manage_messages or role.permissions.kick_members or role.permissions.ban_members:
                    mod_role = role
                    break
            
            if mod_role:
                # –í—Ä–µ–º–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
                await member.remove_roles(mod_role, reason=f"–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ {action_type}")
                
                # –ó–∞–ø–ª–∞–Ω–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—Ç —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                await asyncio.sleep(hours * 3600)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Å—ã –≤ —Å–µ–∫—É–Ω–¥—ã
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–æ–ª—å
                await member.add_roles(mod_role, reason=f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ {action_type}")
                
                await self.log_security_event(
                    "–ü–†–ê–í–ê –ú–û–î–ï–†–ê–¢–û–†–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–´",
                    f"–ü—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ {member.mention} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ {action_type}.",
                    color=0x00ff00
                )
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
    
    async def warn_moderator(self, member, action_type):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É"""
        try:
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï –ú–û–î–ï–†–ê–¢–û–†–ê",
                description=f"–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π —Ç–∏–ø–∞ '{action_type}'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ –±–æ–ª–µ–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã.",
                color=0xff6600,
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="–¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è",
                value=action_type,
                inline=True
            )
            
            embed.add_field(
                name="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è",
                value="–î–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
                inline=False
            )
            
            embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤")
            
            try:
                await member.send(embed=embed)
            except:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –õ–°, –ª–æ–≥–∏—Ä—É–µ–º
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É {member.id}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É: {e}")
    
    async def notify_administrators(self, moderator, action_type, actions_count, limit):
        """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞"""
        try:
            guild = self.bot.get_guild(self.guild_id)
            if not guild:
                return
            
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            admins = [member for member in guild.members if member.guild_permissions.administrator]
            
            embed = discord.Embed(
                title="üö® –ü–†–ï–í–´–®–ï–ù–ò–ï –õ–ò–ú–ò–¢–ê –ú–û–î–ï–†–ê–¢–û–†–ê",
                description=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {moderator.mention} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π.",
                color=0xff0000,
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value=f"{moderator.mention} ({moderator.id})",
                inline=True
            )
            
            embed.add_field(
                name="–¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è",
                value=action_type,
                inline=True
            )
            
            embed.add_field(
                name="–î–µ–π—Å—Ç–≤–∏–π –∑–∞ —á–∞—Å",
                value=f"{actions_count}/{limit}",
                inline=True
            )
            
            embed.add_field(
                name="–°—Ç–∞—Ç—É—Å",
                value="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã",
                inline=False
            )
            
            embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            security_channel = await self.get_security_log_channel()
            if security_channel:
                await security_channel.send(content=" ".join([admin.mention for admin in admins]), embed=embed)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {e}")
    
    async def check_mute_action(self, moderator, target, duration=None):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –º—É—Ç–∞"""
        await self.check_moderator_actions(moderator, 'mutes')
        
        # –õ–æ–≥–∏—Ä—É–µ–º –º—É—Ç
        duration_text = f" –Ω–∞ {duration}" if duration else " –Ω–∞–≤—Å–µ–≥–¥–∞"
        await self.log_security_event(
            "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–ú–£–ß–ï–ù",
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {moderator.mention}{duration_text}.",
            color=0xffaa00,
            fields=[
                {"name": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "value": f"{moderator.mention} ({moderator.id})", "inline": True},
                {"name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": f"{target.mention} ({target.id})", "inline": True},
                {"name": "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "value": duration_text, "inline": True}
                ]
            )
    
    async def protect_channel_deletion(self, channel, user):
        """–ó–∞—â–∏—Ç–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤"""
        await self.check_moderator_actions(user, 'channel_deletions')
        
        # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        await self.log_security_event(
            "–ö–ê–ù–ê–õ –£–î–ê–õ–ï–ù",
            f"–ö–∞–Ω–∞–ª '{channel.name}' –±—ã–ª —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.mention}.",
            color=0xff4444,
            fields=[
                {"name": "–ö–∞–Ω–∞–ª", "value": f"#{channel.name} ({channel.id})", "inline": True},
                {"name": "–£–¥–∞–ª–∏–ª", "value": f"{user.mention} ({user.id})", "inline": True},
                {"name": "–¢–∏–ø –∫–∞–Ω–∞–ª–∞", "value": str(channel.type), "inline": True}
            ]
        )

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—â–∏—Ç–æ–π
class RaidProtectionCommands(commands.Cog):
    def __init__(self, bot, protection_system):
        self.bot = bot
        self.protection = protection_system
    
    @commands.command(name='lockdown')
    @commands.has_permissions(administrator=True)
    async def lockdown(self, ctx):
        """–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.protection.lockdown_mode:
            await ctx.send("‚ùå –†–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω!")
            return
        
        self.protection.lockdown_mode = True
        guild = ctx.guild
        
        # –û—Ç–∫–ª—é—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è @everyone
        everyone_role = guild.default_role
        permissions = everyone_role.permissions
        permissions.send_messages = False
        permissions.add_reactions = False
        await everyone_role.edit(permissions=permissions)
        
        embed = discord.Embed(
            title="üîí –†–ï–ñ–ò–ú –ò–ó–û–õ–Ø–¶–ò–ò –ê–ö–¢–ò–í–ò–†–û–í–ê–ù",
            description="–°–µ—Ä–≤–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.",
            color=0xff0000
        )
        await ctx.send(embed=embed)
        
        await self.protection.log_security_event(
            "–†–ï–ñ–ò–ú –ò–ó–û–õ–Ø–¶–ò–ò –ê–ö–¢–ò–í–ò–†–û–í–ê–ù",
            f"–†–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author.mention}.",
            color=0xff0000
        )
    
    @commands.command(name='unlock')
    @commands.has_permissions(administrator=True)
    async def unlock(self, ctx):
        """–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        if not self.protection.lockdown_mode:
            await ctx.send("‚ùå –†–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω!")
            return
        
        self.protection.lockdown_mode = False
        guild = ctx.guild
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        everyone_role = guild.default_role
        permissions = everyone_role.permissions
        permissions.send_messages = True
        permissions.add_reactions = True
        await everyone_role.edit(permissions=permissions)
        
        embed = discord.Embed(
            title="üîì –†–ï–ñ–ò–ú –ò–ó–û–õ–Ø–¶–ò–ò –û–¢–ö–õ–Æ–ß–ï–ù",
            description="–°–µ—Ä–≤–µ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–Ω–æ–≤–∞ –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.",
            color=0x00ff00
        )
        await ctx.send(embed=embed)
        
        await self.protection.log_security_event(
            "–†–ï–ñ–ò–ú –ò–ó–û–õ–Ø–¶–ò–ò –û–¢–ö–õ–Æ–ß–ï–ù",
            f"–†–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author.mention}.",
            color=0x00ff00
        )
    
    @commands.command(name='raidstatus')
    @commands.has_permissions(manage_guild=True)
    async def raid_status(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã"""
        embed = discord.Embed(
            title="üõ°Ô∏è –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã",
            color=0x0099ff
        )
        
        embed.add_field(
            name="–†–µ–∂–∏–º —Ä–µ–π–¥–∞",
            value="üî¥ –ê–∫—Ç–∏–≤–µ–Ω" if self.protection.raid_mode else "üü¢ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω",
            inline=True
        )
        
        embed.add_field(
            name="–†–µ–∂–∏–º –∏–∑–æ–ª—è—Ü–∏–∏",
            value="üî¥ –ê–∫—Ç–∏–≤–µ–Ω" if self.protection.lockdown_mode else "üü¢ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω",
            inline=True
        )
        
        embed.add_field(
            name="–í—Ö–æ–¥–æ–≤ –∑–∞ —á–∞—Å",
            value=str(len(self.protection.join_times)),
            inline=True
        )
        
        await ctx.send(embed=embed)

async def setup_raid_protection(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤"""
    try:
        protection = RaidProtection(bot)
        bot.raid_protection = protection
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        await bot.add_cog(RaidProtectionCommands(bot, protection))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π
        @bot.event
        async def on_member_join(member):
            if member.guild.id == LIMONERICX_SERVER_ID:
                await protection.check_raid_joins(member)
        
        @bot.event
        async def on_message(message):
            if message.guild and message.guild.id == LIMONERICX_SERVER_ID:
                await protection.check_message_spam(message)
        
        @bot.event
        async def on_member_ban(guild, user):
            if guild.id == LIMONERICX_SERVER_ID:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –∑–∞–±–∞–Ω–∏–ª —á–µ—Ä–µ–∑ audit log
                async for entry in guild.audit_logs(action=discord.AuditLogAction.ban, limit=1):
                    if entry.target.id == user.id:
                        await protection.check_moderator_actions(entry.user, 'bans')
                        break
        
        @bot.event
        async def on_member_remove(member):
            if member.guild.id == LIMONERICX_SERVER_ID:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –∫–∏–∫ —á–µ—Ä–µ–∑ audit log
                async for entry in member.guild.audit_logs(action=discord.AuditLogAction.kick, limit=1):
                    if entry.target.id == member.id:
                        await protection.check_moderator_actions(entry.user, 'kicks')
                        break
        
        @bot.event
        async def on_guild_channel_delete(channel):
            if channel.guild.id == LIMONERICX_SERVER_ID:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ —É–¥–∞–ª–∏–ª –∫–∞–Ω–∞–ª
                async for entry in channel.guild.audit_logs(action=discord.AuditLogAction.channel_delete, limit=1):
                    if entry.target.id == channel.id:
                        await protection.protect_channel_deletion(channel, entry.user)
                        break
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º—É—Ç–æ–≤ —á–µ—Ä–µ–∑ audit log
        @bot.event
        async def on_member_update(before, after):
            if before.guild.id == LIMONERICX_SERVER_ID:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω –º—É—Ç
                if before.timed_out_until != after.timed_out_until and after.timed_out_until:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –∑–∞–º—É—Ç–∏–ª —á–µ—Ä–µ–∑ audit log
                    async for entry in after.guild.audit_logs(action=discord.AuditLogAction.member_update, limit=5):
                        if entry.target.id == after.id and entry.after.timed_out_until:
                            await protection.check_mute_action(entry.user, after, str(after.timed_out_until - datetime.now()))
                        break
        
        logger.info("–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤: {e}")
