"""
–°–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è Discord –±–æ—Ç–∞
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤ —Å —Ñ–æ—Ä–º–æ–π –¥–ª—è –Ω–∏–∫–∞ Minecraft –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
"""

import discord
from discord.ext import commands
import asyncio
import logging
from datetime import datetime
from config import (
    SUPPORT_CHANNEL_ID,
    SUPPORT_EMBED_COLOR,
    SUPPORT_TITLE,
    SUPPORT_DESCRIPTION,
    SUPPORT_FIELDS,
    SUPPORT_BUTTON_LABEL,
    TICKET_CATEGORIES,
    SUPPORT_ROLE_ID,
    TICKETS_CATEGORY_ID
)

logger = logging.getLogger(__name__)

class TicketModal(discord.ui.Modal, title='–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏'):
    def __init__(self, ticket_category):
        super().__init__()
        self.ticket_category = ticket_category
        
    minecraft_nick = discord.ui.TextInput(
        label='–í–∞—à –Ω–∏–∫ –≤ Minecraft',
        placeholder='–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π –Ω–∏–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...',
        required=True,
        max_length=16
    )
    
    problem_description = discord.ui.TextInput(
        label='–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',
        placeholder='–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –∫–æ–≥–¥–∞, –ø—Ä–∏ –∫–∞–∫–∏—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö...',
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=1000
    )
    
    additional_info = discord.ui.TextInput(
        label='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)',
        placeholder='–í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã (—Å—Å—ã–ª–∫–∏), –¥—Ä—É–≥–∏–µ –¥–µ—Ç–∞–ª–∏...',
        style=discord.TextStyle.paragraph,
        required=False,
        max_length=500
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤
            guild = interaction.guild
            support_role = guild.get_role(SUPPORT_ROLE_ID)
            
            tickets_category = None
            for category in guild.categories:
                if category.name == "üé´ –¢–∏–∫–µ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏":
                    tickets_category = category
                    break
            
            if not tickets_category:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤
                tickets_category = await guild.create_category(
                    "üé´ –¢–∏–∫–µ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                    overwrites={
                        guild.default_role: discord.PermissionOverwrite(view_channel=False),
                        support_role: discord.PermissionOverwrite(
                            view_channel=True,
                            send_messages=True,
                            read_message_history=True,
                            manage_messages=True
                        )
                    }
                )
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —Ç–∏–∫–µ—Ç–∞
            ticket_name = f"—Ç–∏–∫–µ—Ç-{interaction.user.name}-{interaction.id}"[:50]
            
            overwrites = {
                guild.default_role: discord.PermissionOverwrite(view_channel=False),
                interaction.user: discord.PermissionOverwrite(
                    view_channel=True,
                    send_messages=True,
                    read_message_history=True,
                    attach_files=True
                ),
                support_role: discord.PermissionOverwrite(
                    view_channel=True,
                    send_messages=True,
                    read_message_history=True,
                    manage_messages=True,
                    manage_channels=True
                )
            }
            
            ticket_channel = await guild.create_text_channel(
                ticket_name,
                category=tickets_category,
                overwrites=overwrites,
                topic=f"–¢–∏–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç {interaction.user.name} | Minecraft: {self.minecraft_nick.value}"
            )
            
            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è —Ç–∏–∫–µ—Ç–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ
            embed = discord.Embed(
                title=f"üé´ –¢–∏–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {self.ticket_category['label']}",
                color=SUPPORT_EMBED_COLOR,
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Discord",
                value=interaction.user.mention,
                inline=True
            )
            
            embed.add_field(
                name="üéÆ –ù–∏–∫ –≤ Minecraft",
                value=f"`{self.minecraft_nick.value}`",
                inline=True
            )
            
            embed.add_field(
                name="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è",
                value=f"{self.ticket_category['emoji']} {self.ticket_category['label']}",
                inline=True
            )
            
            embed.add_field(
                name="üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã",
                value=self.problem_description.value,
                inline=False
            )
            
            if self.additional_info.value:
                embed.add_field(
                    name="‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    value=self.additional_info.value,
                    inline=False
                )
            
            embed.set_footer(
                text=f"ID —Ç–∏–∫–µ—Ç–∞: {interaction.id} ‚Ä¢ –ö–∞–Ω–∞–ª: #{ticket_channel.name}",
                icon_url=interaction.user.display_avatar.url
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–º
            view = TicketControlView(ticket_channel)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–∫–µ—Ç –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
            await ticket_channel.send(
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {interaction.user.mention}! {support_role.mention if support_role else '@–ü–æ–¥–¥–µ—Ä–∂–∫–∞'} –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –ø—Ä–æ–±–ª–µ–º–æ–π.",
                embed=embed,
                view=view
            )
            
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            success_embed = discord.Embed(
                title="‚úÖ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!",
                description=f"–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω: {ticket_channel.mention}\n\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –∏ –æ—Ç–≤–µ—Ç—è—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                color=0x00ff00
            )
            await interaction.response.send_message(embed=success_embed, ephemeral=True)
            
            logger.info(f'–°–æ–∑–¥–∞–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–∏–∫–µ—Ç –æ—Ç {interaction.user.name} (Minecraft: {self.minecraft_nick.value}) –≤ –∫–∞–Ω–∞–ª–µ {ticket_channel.name}')
                
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}')
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", ephemeral=True)

class TicketControlView(discord.ui.View):
    def __init__(self, ticket_channel):
        super().__init__(timeout=None)
        self.ticket_channel = ticket_channel
    
    @discord.ui.button(label='‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É', style=discord.ButtonStyle.success)
    async def take_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not interaction.user.guild_permissions.manage_channels:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–∫–µ—Ç–∞–º–∏", ephemeral=True)
            return
        
        # –õ–æ–≥–∏–∫–∞ –≤–∑—è—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É
        embed = discord.Embed(
            title="‚úÖ –¢–∏–∫–µ—Ç –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É",
            description=f"–¢–∏–∫–µ—Ç –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
            color=0x00ff00
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label='üîí –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=discord.ButtonStyle.danger)
    async def close_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not interaction.user.guild_permissions.manage_channels:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–æ–≤", ephemeral=True)
            return
        
        # –õ–æ–≥–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
        embed = discord.Embed(
            title="üîí –¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç",
            description=f"–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
            color=0xff0000
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

class CategorySelectView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=300)
        
    @discord.ui.select(
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã...",
        options=[
            discord.SelectOption(
                label=cat["label"],
                value=cat["value"],
                emoji=cat["emoji"]
            ) for cat in TICKET_CATEGORIES
        ]
    )
    async def select_category(self, interaction: discord.Interaction, select: discord.ui.Select):
        selected_category = next(cat for cat in TICKET_CATEGORIES if cat["value"] == select.values[0])
        modal = TicketModal(selected_category)
        await interaction.response.send_modal(modal)

class SupportTicketView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label=SUPPORT_BUTTON_LABEL, style=discord.ButtonStyle.primary, emoji="üé´")
    async def create_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        view = CategorySelectView()
        
        embed = discord.Embed(
            title="üìã –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–∞",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É:",
            color=SUPPORT_EMBED_COLOR
        )
        
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

async def setup_support_system(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    try:
        support_channel = bot.get_channel(SUPPORT_CHANNEL_ID)
        if not support_channel:
            logger.error(f'–ö–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {SUPPORT_CHANNEL_ID}')
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
        embed = discord.Embed(
            title=SUPPORT_TITLE,
            description=SUPPORT_DESCRIPTION,
            color=SUPPORT_EMBED_COLOR
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        for field in SUPPORT_FIELDS:
            embed.add_field(
                name=field["name"],
                value=field["value"],
                inline=field["inline"]
            )
        
        embed.set_footer(
            text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Limonericx ‚Ä¢ –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!",
            icon_url=support_channel.guild.icon.url if support_channel.guild.icon else None
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
        view = SupportTicketView()
        
        # –û—á–∏—â–∞–µ–º –∫–∞–Ω–∞–ª –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        async for message in support_channel.history(limit=10):
            if message.author == bot.user:
                try:
                    await message.delete()
                except:
                    pass
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏—Å—Ç–µ–º–æ–π —Ç–∏–∫–µ—Ç–æ–≤
        await support_channel.send(embed=embed, view=view)
        
        logger.info(f'–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ: {support_channel.name}')
        
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {e}')