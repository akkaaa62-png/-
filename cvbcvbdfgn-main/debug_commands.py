"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
"""

import discord
from discord.ext import commands
import logging
from config import WELCOME_CHANNEL_ID, LIMONERICX_SERVER_ID
from datetime import datetime

logger = logging.getLogger('debug_commands')

class DebugCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name='check_mute_system')
    @commands.has_permissions(administrator=True)
    async def check_mute_system(self, ctx):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤"""
        try:
            if not hasattr(self.bot, 'mute_system'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            mute_system = self.bot.mute_system
            embed = discord.Embed(
                title="üîá –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤",
                color=0x00ff00
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª –º—É—Ç–æ–≤
            if mute_system.mute_channel:
                embed.add_field(
                    name="üì¢ –ö–∞–Ω–∞–ª –º—É—Ç–æ–≤",
                    value=f"‚úÖ {mute_system.mute_channel.mention}",
                    inline=False
                )
            else:
                embed.add_field(
                    name="üì¢ –ö–∞–Ω–∞–ª –º—É—Ç–æ–≤",
                    value="‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω",
                    inline=False
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å Muted
            if mute_system.muted_role:
                embed.add_field(
                    name="üîá –†–æ–ª—å Muted",
                    value=f"‚úÖ {mute_system.muted_role.mention}",
                    inline=False
                )
            else:
                embed.add_field(
                    name="üîá –†–æ–ª—å Muted", 
                    value="‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞",
                    inline=False
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_can_mute = any(role.id in [1376140341417349142, 1376140589443190855, 1376140769831817318] for role in ctx.author.roles)
            embed.add_field(
                name="üîë –í–∞—à–∏ –ø—Ä–∞–≤–∞",
                value=f"{'‚úÖ' if user_can_mute else '‚ùå'} –ü—Ä–∞–≤–∞ –Ω–∞ –º—É—Ç",
                inline=False
            )

            await ctx.send(embed=embed)

        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ check_mute_system: {e}")

    @commands.command(name='test_welcome')
    @commands.has_permissions(administrator=True)
    async def test_welcome(self, ctx, member: discord.Member = None):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        if not member:
            member = ctx.author

        logger.info(f'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è {member.name}')

        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é
        try:
            await self.bot.get_cog('WelcomeBot').simulate_member_join(member)
            await ctx.send(f'‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è {member.mention}')

        except Exception as e:
            await ctx.send(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}')
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}')

    @commands.command(name='test_goodbye')
    @commands.has_permissions(administrator=True)
    async def test_goodbye(self, ctx, member: discord.Member = None):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—â–∞–Ω–∏—è"""
        if not member:
            member = ctx.author

        logger.info(f'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—â–∞–Ω–∏–µ –¥–ª—è {member.name}')

        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ —É—Ö–æ–¥–∞ –Ω–∞–ø—Ä—è–º—É—é
        try:
            await self.bot.get_cog('WelcomeBot').simulate_member_remove(member)
            await ctx.send(f'‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–æ—â–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è {member.mention}')

        except Exception as e:
            await ctx.send(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}')
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—â–∞–Ω–∏—è: {e}')

    @commands.command(name='check_perms')
    async def check_permissions(self, ctx):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞"""
        channel = self.bot.get_channel(WELCOME_CHANNEL_ID)
        if not channel:
            await ctx.send('‚ùå –ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')
            return

        guild = self.bot.get_guild(LIMONERICX_SERVER_ID)
        if not guild:
            await ctx.send('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!')
            return

        bot_member = guild.get_member(self.bot.user.id)
        permissions = channel.permissions_for(bot_member)

        embed = discord.Embed(title="üîç –ü—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", color=0x00ff00)

        perms_check = [
            ("üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", permissions.send_messages),
            ("üîó –í—Å—Ç–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫", permissions.embed_links),
            ("üìé –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤", permissions.attach_files),
            ("üìö –ß—Ç–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏", permissions.read_message_history),
            ("üòÄ –í–Ω–µ—à–Ω–∏–µ —ç–º–æ–¥–∑–∏", permissions.use_external_emojis),
            ("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–Ω–∞–ª–∞", permissions.view_channel),
        ]

        for name, has_perm in perms_check:
            embed.add_field(name=name, value="‚úÖ" if has_perm else "‚ùå", inline=True)

        embed.add_field(name="üè∑Ô∏è –ö–∞–Ω–∞–ª", value=f"{channel.mention} (ID: {channel.id})", inline=False)

        await ctx.send(embed=embed)

    @commands.command(name='force_welcome')
    @commands.has_permissions(administrator=True)
    async def force_welcome(self, ctx, member: discord.Member = None):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        if not member:
            member = ctx.author

        channel = self.bot.get_channel(WELCOME_CHANNEL_ID)
        if not channel:
            await ctx.send('‚ùå –ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')
            return

        try:
            from config import (
                WELCOME_COLOR, WELCOME_TITLE, WELCOME_DESCRIPTION, 
                WELCOME_FIELDS, WELCOME_BUTTON_ENABLED, 
                WELCOME_BUTTON_LABEL, WELCOME_BUTTON_URL
            )

            embed = discord.Embed(
                title=WELCOME_TITLE,
                description=f"{WELCOME_DESCRIPTION}\n\n{member.mention}",
                color=WELCOME_COLOR
            )

            for field in WELCOME_FIELDS:
                embed.add_field(
                    name=field["name"],
                    value=field["value"],
                    inline=field["inline"]
                )

            embed.set_thumbnail(url=member.display_avatar.url)
            embed.set_footer(
                text=f"–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫ #{member.guild.member_count}",
                icon_url=member.guild.icon.url if member.guild.icon else None
            )

            if WELCOME_BUTTON_ENABLED and WELCOME_BUTTON_URL:
                view = discord.ui.View(timeout=None)
                button = discord.ui.Button(
                    label=WELCOME_BUTTON_LABEL,
                    url=WELCOME_BUTTON_URL,
                    style=discord.ButtonStyle.link
                )
                view.add_item(button)
                message = await channel.send(embed=embed, view=view)
            else:
                message = await channel.send(embed=embed)

            await ctx.send(f'‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {channel.mention}')

        except Exception as e:
            await ctx.send(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}')
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–∏: {e}')

    @commands.command(name='check_channel')
    @commands.has_permissions(administrator=True)
    async def check_channel(self, ctx):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        channel = self.bot.get_channel(WELCOME_CHANNEL_ID)
        if not channel:
            await ctx.send('‚ùå –ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')
            return

        embed = discord.Embed(title="üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", color=0x00ff00)
        embed.add_field(name="üìù –ù–∞–∑–≤–∞–Ω–∏–µ", value=channel.name, inline=True)
        embed.add_field(name="üÜî ID", value=channel.id, inline=True)
        embed.add_field(name="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è", value=channel.category.name if channel.category else "–ù–µ—Ç", inline=True)
        embed.add_field(name="üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–π", value="–î–∞" if channel.overwrites else "–ù–µ—Ç", inline=True)
        embed.add_field(name="üìä –ü–æ–∑–∏—Ü–∏—è", value=channel.position, inline=True)
        embed.add_field(name="üìÖ –°–æ–∑–¥–∞–Ω", value=channel.created_at.strftime("%d.%m.%Y"), inline=True)

        await ctx.send(embed=embed)

    @commands.command(name='diagnose_welcome')
    @commands.has_permissions(administrator=True)
    async def diagnose_welcome(self, ctx):
        """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π"""
        try:
            embed = discord.Embed(title="üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π", color=0x00ff00)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            from config import LIMONERICX_SERVER_ID, WELCOME_CHANNEL_ID, WELCOME_TITLE, WELCOME_DESCRIPTION
            
            embed.add_field(
                name="‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",
                value=f"**–°–µ—Ä–≤–µ—Ä ID:** {LIMONERICX_SERVER_ID}\n**–ö–∞–Ω–∞–ª ID:** {WELCOME_CHANNEL_ID}\n**–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {WELCOME_TITLE}",
                inline=False
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
            guild = self.bot.get_guild(LIMONERICX_SERVER_ID)
            if guild:
                embed.add_field(
                    name="üè† –°–µ—Ä–≤–µ—Ä",
                    value=f"‚úÖ {guild.name}\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {guild.member_count}",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üè† –°–µ—Ä–≤–µ—Ä",
                    value="‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω",
                    inline=True
                )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
            channel = self.bot.get_channel(WELCOME_CHANNEL_ID)
            if channel:
                embed.add_field(
                    name="üìù –ö–∞–Ω–∞–ª",
                    value=f"‚úÖ {channel.name}\nüÜî {channel.id}",
                    inline=True
                )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
                bot_member = guild.get_member(self.bot.user.id) if guild else None
                if bot_member:
                    permissions = channel.permissions_for(bot_member)
                    perms_status = []
                    perms_status.append(f"üìù –û—Ç–ø—Ä–∞–≤–∫–∞: {'‚úÖ' if permissions.send_messages else '‚ùå'}")
                    perms_status.append(f"üîó Embed: {'‚úÖ' if permissions.embed_links else '‚ùå'}")
                    perms_status.append(f"üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä: {'‚úÖ' if permissions.view_channel else '‚ùå'}")
                    
                    embed.add_field(
                        name="üîë –ü—Ä–∞–≤–∞ –±–æ—Ç–∞",
                        value="\n".join(perms_status),
                        inline=True
                    )
                else:
                    embed.add_field(
                        name="üîë –ü—Ä–∞–≤–∞ –±–æ—Ç–∞",
                        value="‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
                        inline=True
                    )
            else:
                embed.add_field(
                    name="üìù –ö–∞–Ω–∞–ª",
                    value="‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω",
                    inline=True
                )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è
            embed.add_field(
                name="üéØ –°–æ–±—ã—Ç–∏—è",
                value="‚úÖ on_member_join –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n‚úÖ on_member_remove –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                inline=False
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º intents
            intents_status = []
            intents_status.append(f"üë• Members: {'‚úÖ' if self.bot.intents.members else '‚ùå'}")
            intents_status.append(f"üí¨ Message Content: {'‚úÖ' if self.bot.intents.message_content else '‚ùå'}")
            intents_status.append(f"üè† Guilds: {'‚úÖ' if self.bot.intents.guilds else '‚ùå'}")
            
            embed.add_field(
                name="üîß Intents",
                value="\n".join(intents_status),
                inline=False
            )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ diagnose_welcome: {e}")
            import traceback
            logger.error(traceback.format_exc())

    @commands.command(name='test_welcome_event')
    @commands.has_permissions(administrator=True)
    async def test_welcome_event(self, ctx, member: discord.Member = None):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–ø—Ä—è–º—É—é"""
        if not member:
            member = ctx.author
            
        try:
            logger.info(f'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è {member.name}')
            
            # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ on_member_join
            await self.bot.on_member_join(member)
            await ctx.send(f'‚úÖ –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è {member.mention}')
            
        except Exception as e:
            await ctx.send(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}')
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}')

    @commands.command(name='channel_protection_status')
    @commands.has_permissions(administrator=True)
    async def channel_protection_status(self, ctx):
        """–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤"""
        try:
            if not hasattr(self.bot, 'channel_protection'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            protection_system = self.bot.channel_protection
            
            embed = discord.Embed(
                title="üõ°Ô∏è –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤",
                color=0x00ff00
            )
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
            protected_count = len(protection_system.protected_channels)
            embed.add_field(
                name="üìä –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {protected_count}",
                inline=True
            )
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
            punished_count = len(protection_system.punished_users)
            embed.add_field(
                name="üö´ –ù–∞–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {punished_count}",
                inline=True
            )
            
            # –°–ø–∏—Å–æ–∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
            if protected_count > 0:
                channel_list = []
                for channel_id, channel_data in list(protection_system.protected_channels.items())[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    channel_list.append(f"‚Ä¢ {channel_data['name']} (ID: {channel_id})")
                
                if len(protection_system.protected_channels) > 5:
                    channel_list.append(f"... –∏ –µ—â–µ {len(protection_system.protected_channels) - 5}")
                
                embed.add_field(
                    name="üîí –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                    value="\n".join(channel_list),
                    inline=False
                )
            
            # –°–ø–∏—Å–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if punished_count > 0:
                user_list = []
                for user_id, punishment_data in list(protection_system.punished_users.items())[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    user = ctx.guild.get_member(int(user_id))
                    user_name = user.name if user else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
                    punishment_end = punishment_data['punishment_end']
                    user_list.append(f"‚Ä¢ {user_name} - –¥–æ <t:{int(datetime.fromisoformat(punishment_end).timestamp())}:R>")
                
                if len(protection_system.punished_users) > 3:
                    user_list.append(f"... –∏ –µ—â–µ {len(protection_system.punished_users) - 3}")
                
                embed.add_field(
                    name="üö´ –ù–∞–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                    value="\n".join(user_list),
                    inline=False
                )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ channel_protection_status: {e}")
            import traceback
            logger.error(traceback.format_exc())

    @commands.command(name='backup_channel')
    @commands.has_permissions(administrator=True)
    async def backup_channel(self, ctx, channel: discord.TextChannel = None):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∫–∞–Ω–∞–ª–∞"""
        if not channel:
            channel = ctx.channel
            
        try:
            if not hasattr(self.bot, 'channel_protection'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            protection_system = self.bot.channel_protection
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            await protection_system.backup_channel(channel)
            
            embed = discord.Embed(
                title="‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞",
                description=f"–ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞—â–∏—Ç—É",
                color=0x00ff00
            )
            embed.add_field(name="–ö–∞–Ω–∞–ª", value=channel.name, inline=True)
            embed.add_field(name="ID", value=channel.id, inline=True)
            embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–π", value="–î–æ 100 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö", inline=True)
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ backup_channel: {e}")

    @commands.command(name='remove_channel_protection')
    @commands.has_permissions(administrator=True)
    async def remove_channel_protection(self, ctx, channel: discord.TextChannel = None):
        """–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ –∑–∞—â–∏—Ç—ã"""
        if not channel:
            channel = ctx.channel
            
        try:
            if not hasattr(self.bot, 'channel_protection'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            protection_system = self.bot.channel_protection
            
            channel_id = str(channel.id)
            if channel_id in protection_system.protected_channels:
                del protection_system.protected_channels[channel_id]
                protection_system.save_backups()
                
                embed = discord.Embed(
                    title="‚úÖ –ó–∞—â–∏—Ç–∞ —Å–Ω—è—Ç–∞",
                    description=f"–ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª–µ–Ω –∏–∑ –∑–∞—â–∏—Ç—ã",
                    color=0xff8c00
                )
                embed.add_field(name="–ö–∞–Ω–∞–ª", value=channel.name, inline=True)
                embed.add_field(name="ID", value=channel.id, inline=True)
                
                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π")
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –∑–∞—â–∏—Ç—ã: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ remove_channel_protection: {e}")

    @commands.command(name='restore_user_roles')
    @commands.has_permissions(administrator=True)
    async def restore_user_roles(self, ctx, user: discord.Member):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            if not hasattr(self.bot, 'channel_protection'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            protection_system = self.bot.channel_protection
            
            if user.id in protection_system.punished_users:
                await protection_system.restore_user_roles(user)
                
                embed = discord.Embed(
                    title="‚úÖ –†–æ–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã",
                    description=f"–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–æ—Å—Ä–æ—á–Ω–æ",
                    color=0x00ff00
                )
                
                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ–º")
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ restore_user_roles: {e}")

    @commands.command(name='recreate_buttons')
    @commands.has_permissions(administrator=True)
    async def recreate_buttons(self, ctx):
        """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        try:
            if not hasattr(self.bot, 'button_system'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            embed = discord.Embed(
                title="üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫",
                description="–ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...",
                color=0xff8c00
            )
            await ctx.send(embed=embed)

            button_system = self.bot.button_system
            
            # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª—ã –∏ –∫–Ω–æ–ø–∫–∏
            await button_system.setup_button_channels()
            
            embed = discord.Embed(
                title="‚úÖ –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã",
                description="–í—Å–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!",
                color=0x00ff00
            )
            embed.add_field(
                name="üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                value="‚Ä¢ üõ†Ô∏è-–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n‚Ä¢ üõ°Ô∏è-–º–æ–¥–µ—Ä–∞—Ü–∏—è\n‚Ä¢ üé´-–ø–æ–¥–¥–µ—Ä–∂–∫–∞\n‚Ä¢ üìù-–∑–∞—è–≤–∫–∏\n‚Ä¢ ‚úÖ-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è\n‚Ä¢ üí∞-—ç–∫–æ–Ω–æ–º–∏–∫–∞\n‚Ä¢ üéâ-—Å–æ–±—ã—Ç–∏—è\n‚Ä¢ üõ°Ô∏è-–∑–∞—â–∏—Ç–∞",
                inline=False
            )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ recreate_buttons: {e}")

    @commands.command(name='button_status')
    @commands.has_permissions(administrator=True)
    async def button_status(self, ctx):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∫–Ω–æ–ø–æ–∫"""
        try:
            if not hasattr(self.bot, 'button_system'):
                await ctx.send("‚ùå –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return

            button_system = self.bot.button_system
            
            embed = discord.Embed(
                title="üéõÔ∏è –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∫–Ω–æ–ø–æ–∫",
                color=0x00ff00
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã
            channels_status = []
            for channel_key, channel_id in button_system.button_channels.items():
                channel = self.bot.get_channel(channel_id)
                if channel:
                    channels_status.append(f"‚úÖ {channel.name} (ID: {channel_id})")
                else:
                    channels_status.append(f"‚ùå {channel_key} (ID: {channel_id}) - –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            embed.add_field(
                name="üìä –ö–∞–Ω–∞–ª—ã –∫–Ω–æ–ø–æ–∫",
                value="\n".join(channels_status),
                inline=False
            )
            
            embed.add_field(
                name="üîß –î–µ–π—Å—Ç–≤–∏—è",
                value="‚Ä¢ `!recreate_buttons` - –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫–∏\n‚Ä¢ `!button_status` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                inline=False
            )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–Ω–æ–ø–æ–∫: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ button_status: {e}")

    @commands.command(name='full_diagnostic')
    @commands.has_permissions(administrator=True)
    async def full_diagnostic(self, ctx):
        """–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º –±–æ—Ç–∞"""
        try:
            embed = discord.Embed(
                title="üîß –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º –±–æ—Ç–∞",
                description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è",
                color=0x0099ff,
                timestamp=datetime.utcnow()
            )
            
            # –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π
            if hasattr(self.bot, 'role_system'):
                embed.add_field(
                    name="üëë –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üëë –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if hasattr(self.bot, 'verification_system'):
                embed.add_field(
                    name="üîê –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üîê –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤
            if hasattr(self.bot, 'mute_system'):
                embed.add_field(
                    name="üîá –°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üîá –°–∏—Å—Ç–µ–º–∞ –º—É—Ç–æ–≤",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–∏–Ω–≥–∞
            if hasattr(self.bot, 'ping_protection'):
                embed.add_field(
                    name="üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–∏–Ω–≥–∞",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–∏–Ω–≥–∞",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤
            if hasattr(self.bot, 'private_chat_system'):
                embed.add_field(
                    name="üí¨ –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —á–∞—Ç—ã",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üí¨ –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —á–∞—Ç—ã",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∫–∞–Ω–∞–ª–æ–≤
            if hasattr(self.bot, 'channel_protection'):
                embed.add_field(
                    name="üîí –ó–∞—â–∏—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üîí –ó–∞—â–∏—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–π–¥–æ–≤
            if hasattr(self.bot, 'raid_protection'):
                embed.add_field(
                    name="üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç —Ä–µ–π–¥–æ–≤",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç —Ä–µ–π–¥–æ–≤",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
            if hasattr(self.bot, 'music_system'):
                embed.add_field(
                    name="üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ (—Ç—Ä–µ–±—É–µ—Ç PyNaCl)",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ Mafia
            mafia_cog = self.bot.get_cog('MafiaSystem')
            if mafia_cog:
                embed.add_field(
                    name="üé≠ –°–∏—Å—Ç–µ–º–∞ Mafia",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üé≠ –°–∏—Å—Ç–µ–º–∞ Mafia",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            if hasattr(self.bot, 'auto_recovery'):
                embed.add_field(
                    name="üîÑ –ê–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üîÑ –ê–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            if hasattr(self.bot, 'enhanced_logging'):
                embed.add_field(
                    name="üìù –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ",
                    value="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                    inline=True
                )
            else:
                embed.add_field(
                    name="üìù –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ",
                    value="‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                    inline=True
                )
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞
            bot_member = ctx.guild.get_member(self.bot.user.id)
            if bot_member:
                permissions = bot_member.guild_permissions
                perms_status = []
                perms_status.append(f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏: {'‚úÖ' if permissions.manage_channels else '‚ùå'}")
                perms_status.append(f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏: {'‚úÖ' if permissions.manage_roles else '‚ùå'}")
                perms_status.append(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {'‚úÖ' if permissions.send_messages else '‚ùå'}")
                perms_status.append(f"–í—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫: {'‚úÖ' if permissions.embed_links else '‚ùå'}")
                
                embed.add_field(
                    name="ü§ñ –ü—Ä–∞–≤–∞ –±–æ—Ç–∞",
                    value="\n".join(perms_status),
                    inline=False
                )
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
                value=f"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {ctx.guild.member_count}\n–ö–∞–Ω–∞–ª–æ–≤: {len(ctx.guild.channels)}\n–†–æ–ª–µ–π: {len(ctx.guild.roles)}",
                inline=False
            )
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = []
            if not hasattr(self.bot, 'music_system'):
                recommendations.append("‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyNaCl –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
            if not mafia_cog:
                recommendations.append("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å–∏—Å—Ç–µ–º—ã Mafia")
            if not hasattr(self.bot, 'auto_recovery'):
                recommendations.append("‚Ä¢ –í–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            
            if recommendations:
                embed.add_field(
                    name="üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                    value="\n".join(recommendations),
                    inline=False
                )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ full_diagnostic: {e}")
            import traceback
            logger.error(traceback.format_exc())

async def setup(bot):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ cog"""
    await bot.add_cog(DebugCommands(bot))