"""
–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
–õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
"""

import discord
from discord.ext import commands
import logging
from datetime import datetime
import json
import os
from typing import Optional, List, Dict
import asyncio

logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π
EXEMPT_LOAD_ROLES = [1385306542781497425]  # –†–æ–ª–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞–≥—Ä—É–∑–∫–∏
EXEMPT_RESTORE_ROLES = [1385306542781497425]  # –†–æ–ª–∏ –±–µ–∑ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

class ModerationLogs:
    def __init__(self, bot):
        self.bot = bot
        self.log_channel_id = 1376194575281950741
        self.log_channel = None
        self.enabled = True
        self.message_backup = {}  # –•—Ä–∞–Ω–∏–ª–∏—â–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.backup_enabled = True  # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        self.pending_reasons = {}  # {moderator_id: asyncio.Task}
        self.pending_log_messages = {}  # {moderator_id: log_message_id}
        
    async def setup_logging(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            self.log_channel = self.bot.get_channel(self.log_channel_id)
            if not self.log_channel:
                logger.error(f"–ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.log_channel_id}")
                return False
            
            logger.info(f"–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞: {self.log_channel.name}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return False
    
    async def log_action(self, action_type: str, moderator: discord.Member, target: Optional[discord.Member] = None, 
                        details: str = "", channel: Optional[discord.TextChannel] = None, 
                        reason: str = "", duration: str = "", roles: Optional[List[discord.Role]] = None,
                        permissions: Optional[Dict] = None, old_value: str = "", new_value: str = "",
                        message_content: str = "", emoji_name: str = ""):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º"""
        if not self.enabled or not self.log_channel:
            return
        
        try:
            # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è roles –∏ permissions
            if roles is None:
                roles = []
            if permissions is None:
                permissions = {}
            
            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed –¥–ª—è –ª–æ–≥–∞
            embed = discord.Embed(
                title=f"üõ°Ô∏è {action_type}",
                description=f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {moderator.mention} ({moderator.name}#{moderator.discriminator})",
                color=self._get_action_color(action_type),
                timestamp=datetime.utcnow()
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            if hasattr(moderator, 'display_avatar') and moderator.display_avatar:
                embed.set_thumbnail(url=moderator.display_avatar.url)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è
            if target:
                target_info = f"{target.mention} ({getattr(target, 'name', '‚Äî')}#{getattr(target, 'discriminator', '‚Äî')})\nID: {getattr(target, 'id', '‚Äî')}"
                embed.add_field(
                    name="üë§ –¶–µ–ª—å",
                    value=target_info,
                    inline=True
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
            if channel:
                channel_name = getattr(channel, 'name', None)
                if channel_name is None:
                    # –ï—Å–ª–∏ —ç—Ç–æ –õ–° –∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø, –ø–∏—à–µ–º 'Direct Message'
                    channel_name = 'Direct Message'
                channel_value = channel.mention if hasattr(channel, 'mention') else channel_name
                embed.add_field(
                    name="üì∫ –ö–∞–Ω–∞–ª",
                    value=channel_value,
                    inline=True
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—É
            if reason:
                embed.add_field(
                    name="üìù –ü—Ä–∏—á–∏–Ω–∞",
                    value=f"```{reason}```",
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            if duration:
                embed.add_field(
                    name="‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                    value=f"`{duration}`",
                    inline=True
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª–∏
            if roles:
                roles_text = ", ".join([role.mention for role in roles])
                embed.add_field(
                    name="üé≠ –†–æ–ª–∏",
                    value=roles_text,
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤
            if permissions:
                perms_text = ""
                for perm, value in permissions.items():
                    perms_text += f"‚Ä¢ {perm}: {'‚úÖ' if value else '‚ùå'}\n"
                embed.add_field(
                    name="üîê –ü—Ä–∞–≤–∞",
                    value=f"```{perms_text}```",
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
            if old_value and new_value:
                embed.add_field(
                    name="üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                    value=f"**–ë—ã–ª–æ:** `{old_value}`\n**–°—Ç–∞–ª–æ:** `{new_value}`",
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if message_content:
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                if len(message_content) > 1000:
                    message_content = message_content[:997] + "..."
                embed.add_field(
                    name="üí¨ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                    value=f"```{message_content}```",
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–º–æ–¥–∑–∏
            if emoji_name:
                embed.add_field(
                    name="üòÄ –≠–º–æ–¥–∑–∏",
                    value=f"`{emoji_name}`",
                    inline=True
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
            if details:
                embed.add_field(
                    name="üìã –î–µ—Ç–∞–ª–∏",
                    value=f"```{details}```",
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º ID —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
            footer_text = f"üÜî –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderator.id}"
            if target:
                footer_text += f" | –¶–µ–ª—å: {target.id}"
            embed.set_footer(text=footer_text, icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
            
            log_message = await self.log_channel.send(embed=embed)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä ‚Äî —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ –±–æ—Ç, –∏ –Ω–µ —Å–∞–º –±–æ—Ç
            is_human = hasattr(moderator, 'bot') and not moderator.bot and moderator.id != self.bot.user.id
            # –ï—Å–ª–∏ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –∏–ª–∏ —è–≤–Ω–æ '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞', –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä ‚Äî —á–µ–ª–æ–≤–µ–∫, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
            if (not reason or reason.strip().lower() == "–ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞") and is_human:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ª–æ–≥-—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                self.pending_log_messages[moderator.id] = log_message.id
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—á–∏–Ω—ã –¢–û–õ–¨–ö–û –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ
                await self._ask_reason(action_type, moderator, target)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è {action_type}: {e}")
    
    def _get_action_color(self, action_type: str) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è"""
        colors = {
            "–ú—É—Ç": 0xff0000,      # –ö—Ä–∞—Å–Ω—ã–π
            "–†–∞–∑–º—É—Ç": 0x00ff00,   # –ó–µ–ª–µ–Ω—ã–π
            "–ë–∞–Ω": 0x8b0000,      # –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
            "–†–∞–∑–±–∞–Ω": 0x00ff00,   # –ó–µ–ª–µ–Ω—ã–π
            "–ö–∏–∫": 0xff8c00,      # –û—Ä–∞–Ω–∂–µ–≤—ã–π
            "–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è": 0xff0000,  # –ö—Ä–∞—Å–Ω—ã–π
            "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è": 0x0099ff,  # –°–∏–Ω–∏–π
            "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è": 0x00ff00,  # –ó–µ–ª–µ–Ω—ã–π
            "–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞": 0xff0000,     # –ö—Ä–∞—Å–Ω—ã–π
            "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞": 0x00ff00,     # –ó–µ–ª–µ–Ω—ã–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π": 0x0099ff,     # –°–∏–Ω–∏–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ —Ä–æ–ª–∏": 0x0099ff, # –°–∏–Ω–∏–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –∫–∞–Ω–∞–ª–∞": 0x0099ff, # –°–∏–Ω–∏–π
            "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞": 0xff0000,    # –ö—Ä–∞—Å–Ω—ã–π
            "–£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏": 0xff0000,     # –ö—Ä–∞—Å–Ω—ã–π
            "–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏": 0xff0000,    # –ö—Ä–∞—Å–Ω—ã–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞": 0x0099ff,  # –°–∏–Ω–∏–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞": 0x0099ff,   # –°–∏–Ω–∏–π
            "–í—ã—Ö–æ–¥ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞": 0xff8c00,    # –û—Ä–∞–Ω–∂–µ–≤—ã–π
            "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É": 0x00ff00,  # –ó–µ–ª–µ–Ω—ã–π
            "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ": 0xff8c00,  # –û—Ä–∞–Ω–∂–µ–≤—ã–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞": 0x0099ff,   # –°–∏–Ω–∏–π
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞": 0x0099ff, # –°–∏–Ω–∏–π
            "–î—Ä—É–≥–æ–µ": 0x808080    # –°–µ—Ä—ã–π
        }
        return colors.get(action_type, colors["–î—Ä—É–≥–æ–µ"])
    
    async def backup_message(self, message: discord.Message):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        if not self.backup_enabled:
            return
            
        try:
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞
            channel_name = getattr(message.channel, 'name', None)
            if channel_name is None:
                # –ï—Å–ª–∏ —ç—Ç–æ DMChannel –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–∏–ø –±–µ–∑ –∏–º–µ–Ω–∏
                if isinstance(message.channel, discord.DMChannel):
                    channel_name = f"DM —Å {message.channel.recipient.name if message.channel.recipient else 'Unknown'}"
                elif isinstance(message.channel, discord.GroupChannel):
                    channel_name = f"–ì—Ä—É–ø–ø–∞: {getattr(message.channel, 'name', 'Unknown')}"
                else:
                    channel_name = "Unknown Channel"
            
            backup_data = {
                'content': message.content,
                'author_id': message.author.id,
                'author_name': message.author.name,
                'channel_id': message.channel.id,
                'channel_name': channel_name,
                'timestamp': message.created_at.isoformat(),
                'attachments': [att.url for att in message.attachments],
                'embeds': [embed.to_dict() for embed in message.embeds],
                'mentions': [user.id for user in message.mentions],
                'role_mentions': [role.id for role in message.role_mentions]
            }
            
            self.message_backup[message.id] = backup_data
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (–º–∞–∫—Å–∏–º—É–º 1000 —Å–æ–æ–±—â–µ–Ω–∏–π)
            if len(self.message_backup) > 1000:
                oldest_key = min(self.message_backup.keys())
                del self.message_backup[oldest_key]
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    async def restore_message(self, message_id: int, channel: discord.TextChannel):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º"""
        if not self.backup_enabled or message_id not in self.message_backup:
            return False
            
        try:
            backup_data = self.message_backup[message_id]
            
            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            embed = discord.Embed(
                title="üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                description=backup_data['content'],
                color=0x00ff00,
                timestamp=datetime.fromisoformat(backup_data['timestamp'])
            )
            
            embed.add_field(
                name="üë§ –ê–≤—Ç–æ—Ä",
                value=f"<@{backup_data['author_id']}> ({backup_data['author_name']})",
                inline=True
            )
            
            embed.add_field(
                name="üì∫ –ö–∞–Ω–∞–ª",
                value=f"#{backup_data['channel_name']}",
                inline=True
            )
            
            if backup_data['attachments']:
                embed.add_field(
                    name="üìé –í–ª–æ–∂–µ–Ω–∏—è",
                    value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(backup_data['attachments'])}",
                    inline=True
                )
            
            embed.set_footer(text=f"üÜî ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message_id} ‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", 
                           icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
            
            await channel.send(embed=embed)
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            del self.message_backup[message_id]
            
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False

    async def _ask_reason(self, action_type, moderator, target):
        # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ, –µ—Å–ª–∏ —É–∂–µ –∂–¥–µ–º –ø—Ä–∏—á–∏–Ω—É
        if moderator.id in self.pending_reasons:
            return
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–∏
            if target:
                target_info = f"{target.mention} ({getattr(target, 'name', '‚Äî')}#{getattr(target, 'discriminator', '‚Äî')})\nID: {getattr(target, 'id', '‚Äî')}"
            else:
                target_info = '‚Äî'
            embed = discord.Embed(
                title="üö® –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏—á–∏–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!",
                description=(
                    f"**–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ:**\n"
                    f"`{action_type}`\n"
                    f"\n"
                    f"**–¶–µ–ª—å:** {target_info}\n"
                    f"\n"
                    f"**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.**\n"
                    f"\n"
                    f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ **–≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç**.\n"
                    f"–ï—Å–ª–∏ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–∞, –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–æ!"
                ),
                color=0xff5555
            )
            embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/463/463612.png")
            embed.set_footer(text="–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω–æ–π. –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ! üìù")
            await moderator.send(embed=embed)
        except Exception:
            return  # –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫—Ä—ã—Ç—ã –õ–°)
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã
        task = asyncio.create_task(self._wait_for_reason(moderator, target, action_type))
        self.pending_reasons[moderator.id] = task

    async def _wait_for_reason(self, moderator, target, action_type):
        def check(msg):
            return (
                msg.author.id == moderator.id and isinstance(msg.channel, discord.DMChannel)
            )
        try:
            msg = await self.bot.wait_for('message', check=check, timeout=180)
            reason = msg.content.strip()
            await moderator.send(f"–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏—á–∏–Ω–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞: {reason}")
            log_message_id = self.pending_log_messages.get(moderator.id)
            if log_message_id and self.log_channel:
                try:
                    log_message = await self.log_channel.fetch_message(log_message_id)
                    embed = log_message.embeds[0]
                    new_embed = discord.Embed.from_dict(embed.to_dict())
                    found = False
                    for i, field in enumerate(new_embed.fields):
                        if field.name == "üìù –ü—Ä–∏—á–∏–Ω–∞":
                            new_embed.set_field_at(i, name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=f"```{reason}```", inline=field.inline)
                            found = True
                            break
                    if not found:
                        new_embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=f"```{reason}```", inline=False)
                    await log_message.edit(embed=new_embed)
                except Exception as e:
                    await moderator.send(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –≤ –ª–æ–≥–∞—Ö: {e}")
            self.pending_log_messages.pop(moderator.id, None)
        except asyncio.TimeoutError:
            await moderator.send("‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ! –î–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–æ.")
            # –ü–µ—Ä–µ–¥–∞—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞
            await self._revert_action(action_type, moderator, target, **self._collect_revert_kwargs(action_type, moderator, target))
            self.pending_log_messages.pop(moderator.id, None)
        finally:
            self.pending_reasons.pop(moderator.id, None)

    def _collect_revert_kwargs(self, action_type, moderator, target):
        # –°–æ–±–∏—Ä–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞ (roles, channel, old_value –∏ —Ç.–¥.)
        # –ú–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥ –Ω—É–∂–¥—ã –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
        kwargs = {}
        if target:
            kwargs['target_id'] = getattr(target, 'id', None)
            if hasattr(target, 'guild'):
                kwargs['guild'] = target.guild
        # –î–ª—è —Ä–æ–ª–µ–π
        if hasattr(target, 'roles'):
            kwargs['roles'] = [role for role in getattr(target, 'roles', []) if role.name != '@everyone']
        # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤
        if hasattr(target, 'channel'):
            kwargs['channel'] = getattr(target, 'channel', None)
        # –î–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∏–∫–Ω–µ–π–º)
        if hasattr(target, 'old_value'):
            kwargs['old_value'] = getattr(target, 'old_value', None)
        return kwargs

    async def _revert_action(self, action_type, moderator, target, **kwargs):
        try:
            guild = None
            if target and hasattr(target, 'guild'):
                guild = target.guild
            elif 'guild' in kwargs:
                guild = kwargs['guild']
            # –ü–æ–ª—É—á–∞–µ–º ID —Ü–µ–ª–∏
            target_id = getattr(target, 'id', None) or kwargs.get('target_id')
            # –û—Ç–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏–π
            if action_type == "–ë–∞–Ω":
                if guild and target_id:
                    try:
                        await guild.unban(discord.Object(id=target_id), reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                        await moderator.send(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {target_id} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω (–æ—Ç–∫–∞—Ç –±–∞–Ω–∞).")
                    except Exception as e:
                        await moderator.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                else:
                    await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ ID –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞.")
            elif action_type == "–†–∞–∑–±–∞–Ω":
                # –û—Ç–∫–∞—Ç —Ä–∞–∑–±–∞–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç —Ä–∞–∑–±–∞–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
            elif action_type == "–ú—É—Ç":
                if guild and target_id:
                    try:
                        member = guild.get_member(target_id)
                        if not member:
                            member = await guild.fetch_member(target_id)
                        muted_role = discord.utils.get(guild.roles, name="Muted")
                        if muted_role and member and muted_role in member.roles:
                            await member.remove_roles(muted_role, reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                            await moderator.send(f"‚úÖ –ú—É—Ç —Å–Ω—è—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} (–æ—Ç–∫–∞—Ç –º—É—Ç–∞).")
                        else:
                            await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å Muted –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                    except Exception as e:
                        await moderator.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –º—É—Ç: {e}")
                else:
                    await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ ID –¥–ª—è —Å–Ω—è—Ç–∏—è –º—É—Ç–∞.")
            elif action_type == "–†–∞–∑–º—É—Ç":
                # –û—Ç–∫–∞—Ç —Ä–∞–∑–º—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç —Ä–∞–∑–º—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
            elif action_type == "–ö–∏–∫":
                # –ö–∏–∫–∞ –Ω–µ–ª—å–∑—è –æ—Ç–∫–∞—Ç–∏—Ç—å
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç –∫–∏–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω (Discord –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –∫–∏–∫–∞).")
            elif action_type in ["–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π", "–°–Ω—è—Ç–∏–µ —Ä–æ–ª–µ–π"]:
                if guild and target_id and 'roles' in kwargs:
                    try:
                        member = guild.get_member(target_id)
                        if not member:
                            member = await guild.fetch_member(target_id)
                        roles = kwargs['roles']
                        if action_type == "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π":
                            await member.remove_roles(*roles, reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                            await moderator.send(f"‚úÖ –†–æ–ª–∏ —É–¥–∞–ª–µ–Ω—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} (–æ—Ç–∫–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π).")
                        else:
                            await member.add_roles(*roles, reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                            await moderator.send(f"‚úÖ –†–æ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} (–æ—Ç–∫–∞—Ç —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π).")
                    except Exception as e:
                        await moderator.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–∞—Ç–∏—Ç—å —Ä–æ–ª–∏: {e}")
                else:
                    await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Ä–æ–ª–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞.")
            elif action_type in ["–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏", "–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ —Ä–æ–ª–∏"]:
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏–π —Å —Ä–æ–ª—è–º–∏ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            elif action_type == "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞":
                if guild and 'channel' in kwargs:
                    try:
                        channel = kwargs['channel']
                        await channel.delete(reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                        await moderator.send(f"‚úÖ –ö–∞–Ω–∞–ª {channel.name} —É–¥–∞–ª—ë–Ω (–æ—Ç–∫–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞).")
                    except Exception as e:
                        await moderator.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª: {e}")
                else:
                    await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            elif action_type == "–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞":
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            elif action_type == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞":
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            elif action_type == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞":
                if guild and target_id and 'old_value' in kwargs:
                    try:
                        member = guild.get_member(target_id)
                        if not member:
                            member = await guild.fetch_member(target_id)
                        await member.edit(nick=kwargs['old_value'], reason="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                        await moderator.send(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
                    except Exception as e:
                        await moderator.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º: {e}")
                else:
                    await moderator.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å—Ç–∞—Ä—ã–π –Ω–∏–∫ –¥–ª—è –æ—Ç–∫–∞—Ç–∞.")
            elif action_type in ["–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"]:
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API.")
            elif action_type in ["–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏", "–£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞", "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞"]:
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏–π —Å —ç–º–æ–¥–∑–∏/—Å—Ç–∏–∫–µ—Ä–∞–º–∏ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API.")
            elif action_type == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞":
                await moderator.send("‚ùå –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ Discord API.")
            else:
                await moderator.send(f"‚ùå –û—Ç–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è '{action_type}' –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
        except Exception as e:
            await moderator.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è: {e}")

async def setup_moderation_logs(bot):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        logs_system = ModerationLogs(bot)
        bot.moderation_logs = logs_system
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É
        await logs_system.setup_logging()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        await setup_log_handlers(bot, logs_system)
        
        logger.info("–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

async def setup_log_handlers(bot, logs_system):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    @bot.event
    async def on_member_ban(guild, user):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            async for entry in guild.audit_logs(action=discord.AuditLogAction.ban, limit=1):
                if entry.target.id == user.id:
                    await logs_system.log_action(
                        action_type="–ë–∞–Ω",
                        moderator=entry.user,
                        target=user,
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–Ω–∞: {e}")
    
    @bot.event
    async def on_member_unban(guild, user):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Ä–∞–∑–±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            async for entry in guild.audit_logs(action=discord.AuditLogAction.unban, limit=1):
                if entry.target.id == user.id:
                    await logs_system.log_action(
                        action_type="–†–∞–∑–±–∞–Ω",
                        moderator=entry.user,
                        target=user,
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–±–∞–Ω–∞: {e}")
    
    @bot.event
    async def on_member_remove(member):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∫–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            async for entry in member.guild.audit_logs(action=discord.AuditLogAction.kick, limit=1):
                if entry.target.id == member.id:
                    await logs_system.log_action(
                        action_type="–ö–∏–∫",
                        moderator=entry.user,
                        target=member,
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∏–∫–∞: {e}")
    
    @bot.event
    async def on_member_update(before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
            if before.roles != after.roles:
                added_roles = set(after.roles) - set(before.roles)
                removed_roles = set(before.roles) - set(after.roles)
                
                async for entry in before.guild.audit_logs(action=discord.AuditLogAction.member_role_update, limit=1):
                    if entry.target.id == after.id:
                        if added_roles:
                            await logs_system.log_action(
                                action_type="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π",
                                moderator=entry.user,
                                target=after,
                                roles=list(added_roles),
                                reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                            )
                        if removed_roles:
                            await logs_system.log_action(
                                action_type="–°–Ω—è—Ç–∏–µ —Ä–æ–ª–µ–π",
                                moderator=entry.user,
                                target=after,
                                roles=list(removed_roles),
                                reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                            )
                        break
            
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
            if before.nick != after.nick:
                async for entry in before.guild.audit_logs(action=discord.AuditLogAction.member_update, limit=1):
                    if entry.target.id == after.id:
                        await logs_system.log_action(
                            action_type="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞",
                            moderator=entry.user,
                            target=after,
                            old_value=before.nick or "–ù–µ—Ç",
                            new_value=after.nick or "–ù–µ—Ç",
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                        break
                        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}")
    
    @bot.event
    async def on_guild_channel_delete(channel):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        try:
            async for entry in channel.guild.audit_logs(action=discord.AuditLogAction.channel_delete, limit=1):
                if entry.target.id == channel.id:
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
                        moderator=entry.user,
                        channel=channel,
                        details=f"–ö–∞–Ω–∞–ª: {channel.name}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
    
    @bot.event
    async def on_guild_channel_create(channel):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        try:
            async for entry in channel.guild.audit_logs(action=discord.AuditLogAction.channel_create, limit=1):
                if entry.target.id == channel.id:
                    await logs_system.log_action(
                        action_type="–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
                        moderator=entry.user,
                        channel=channel,
                        details=f"–ö–∞–Ω–∞–ª: {channel.name}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
    
    @bot.event
    async def on_guild_channel_update(before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        try:
            async for entry in before.guild.audit_logs(action=discord.AuditLogAction.channel_update, limit=1):
                if entry.target.id == after.id:
                    changes = []
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
                    if before.name != after.name:
                        changes.append(f"–ò–º—è: {before.name} ‚Üí {after.name}")
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
                    if hasattr(before, 'topic') and hasattr(after, 'topic') and before.topic != after.topic:
                        changes.append("–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞")
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤
                    if hasattr(before, 'overwrites') and hasattr(after, 'overwrites') and before.overwrites != after.overwrites:
                        changes.append("–ü—Ä–∞–≤–∞ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω—ã")
                    
                    if changes:
                        await logs_system.log_action(
                            action_type="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
                            moderator=entry.user,
                            channel=after,
                            details=f"–ö–∞–Ω–∞–ª: {after.name}\n–ò–∑–º–µ–Ω–µ–Ω–∏—è: {'; '.join(changes)}",
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
    
    @bot.event
    async def on_message(message):
        """–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –õ–°
        if message.author.bot or isinstance(message.channel, discord.DMChannel):
            return
        
        # –î–µ–ª–∞–µ–º –±—ç–∫–∞–ø —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
        await logs_system.backup_message(message)
    
    @bot.event
    async def on_message_edit(before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤, –õ–° –∏ –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if (before.author.bot or 
                isinstance(before.channel, discord.DMChannel) or 
                before.content == after.content):
                return
            
            async for entry in before.guild.audit_logs(action=discord.AuditLogAction.message_delete, limit=1):
                if entry.target.id == before.author.id:
                    await logs_system.log_action(
                        action_type="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                        moderator=entry.user,
                        target=before.author,
                        channel=before.channel,
                        old_value=before.content,
                        new_value=after.content,
                        message_content=f"–ë—ã–ª–æ: {before.content}\n–°—Ç–∞–ª–æ: {after.content}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    @bot.event
    async def on_message_delete(message):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ"""
        try:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤ –∏ –õ–°
            if message.author.bot or isinstance(message.channel, discord.DMChannel):
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π
            if any(role.id in EXEMPT_RESTORE_ROLES for role in message.author.roles):
                logger.info(f"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.name} —Å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–π —Ä–æ–ª—å—é")
                return
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
            async for entry in message.guild.audit_logs(action=discord.AuditLogAction.message_delete, limit=1):
                if entry.target.id == message.author.id:
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                        moderator=entry.user,
                        target=message.author,
                        channel=message.channel,
                        message_content=message.content,
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            restored = await logs_system.restore_message(message.id, message.channel)
            
            if restored:
                await logs_system.log_action(
                    action_type="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                    moderator=bot.user,
                    target=message.author,
                    channel=message.channel,
                    details="–°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
                )
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    @bot.event
    async def on_raw_reaction_remove(payload):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π (—ç–º–æ–¥–∑–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏)"""
        try:
            guild = bot.get_guild(payload.guild_id)
            if not guild:
                return
            
            channel = guild.get_channel(payload.channel_id)
            if not channel:
                return
            
            async for entry in guild.audit_logs(action=discord.AuditLogAction.message_delete, limit=1):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏
                if hasattr(entry, 'extra') and hasattr(entry.extra, 'emoji'):
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏",
                        moderator=entry.user,
                        channel=channel,
                        emoji_name=payload.emoji.name,
                        details=f"–≠–º–æ–¥–∑–∏: {payload.emoji.name} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏: {e}")
    
    @bot.event
    async def on_guild_emojis_update(guild, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —ç–º–æ–¥–∑–∏"""
        try:
            added_emojis = set(after) - set(before)
            removed_emojis = set(before) - set(after)
            
            async for entry in guild.audit_logs(action=discord.AuditLogAction.emoji_create, limit=1):
                if added_emojis:
                    await logs_system.log_action(
                        action_type="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏",
                        moderator=entry.user,
                        details=f"–≠–º–æ–¥–∑–∏: {', '.join([emoji.name for emoji in added_emojis])}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
            
            async for entry in guild.audit_logs(action=discord.AuditLogAction.emoji_delete, limit=1):
                if removed_emojis:
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏",
                        moderator=entry.user,
                        details=f"–≠–º–æ–¥–∑–∏: {', '.join([emoji.name for emoji in removed_emojis])}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —ç–º–æ–¥–∑–∏: {e}")
    
    @bot.event
    async def on_guild_stickers_update(guild, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤"""
        try:
            added_stickers = set(after) - set(before)
            removed_stickers = set(before) - set(after)
            
            async for entry in guild.audit_logs(action=discord.AuditLogAction.sticker_create, limit=1):
                if added_stickers:
                    await logs_system.log_action(
                        action_type="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞",
                        moderator=entry.user,
                        details=f"–°—Ç–∏–∫–µ—Ä: {', '.join([sticker.name for sticker in added_stickers])}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
            
            async for entry in guild.audit_logs(action=discord.AuditLogAction.sticker_delete, limit=1):
                if removed_stickers:
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞",
                        moderator=entry.user,
                        details=f"–°—Ç–∏–∫–µ—Ä: {', '.join([sticker.name for sticker in removed_stickers])}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∏–∫–µ—Ä–æ–≤: {e}")
    
    @bot.event
    async def on_voice_state_update(member, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        try:
            # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            if before.channel and not after.channel:
                async for entry in member.guild.audit_logs(action=discord.AuditLogAction.member_disconnect, limit=1):
                    if entry.target.id == member.id:
                        await logs_system.log_action(
                            action_type="–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ",
                            moderator=entry.user,
                            target=member,
                            channel=before.channel,
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                        break
            
            # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
            if before.mute != after.mute:
                async for entry in member.guild.audit_logs(action=discord.AuditLogAction.member_update, limit=1):
                    if entry.target.id == member.id:
                        action = "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞" if after.mute else "–í–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞"
                        await logs_system.log_action(
                            action_type=action,
                            moderator=entry.user,
                            target=member,
                            channel=after.channel or before.channel,
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                        break
            
            # –ó–∞–≥–ª—É—à–µ–Ω–∏–µ
            if before.deaf != after.deaf:
                async for entry in member.guild.audit_logs(action=discord.AuditLogAction.member_update, limit=1):
                    if entry.target.id == member.id:
                        action = "–ó–∞–≥–ª—É—à–µ–Ω–∏–µ" if after.deaf else "–°–Ω—è—Ç–∏–µ –∑–∞–≥–ª—É—à–µ–Ω–∏—è"
                        await logs_system.log_action(
                            action_type=action,
                            moderator=entry.user,
                            target=member,
                            channel=after.channel or before.channel,
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                        break
                        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
    
    @bot.event
    async def on_guild_role_create(role):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏"""
        try:
            async for entry in role.guild.audit_logs(action=discord.AuditLogAction.role_create, limit=1):
                if entry.target.id == role.id:
                    await logs_system.log_action(
                        action_type="–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏",
                        moderator=entry.user,
                        details=f"–†–æ–ª—å: {role.name}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏: {e}")
    
    @bot.event
    async def on_guild_role_delete(role):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏"""
        try:
            async for entry in role.guild.audit_logs(action=discord.AuditLogAction.role_delete, limit=1):
                if entry.target.id == role.id:
                    await logs_system.log_action(
                        action_type="–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏",
                        moderator=entry.user,
                        details=f"–†–æ–ª—å: {role.name}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏: {e}")
    
    @bot.event
    async def on_guild_role_update(before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏"""
        try:
            async for entry in before.guild.audit_logs(action=discord.AuditLogAction.role_update, limit=1):
                if entry.target.id == after.id:
                    changes = []
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
                    if before.name != after.name:
                        changes.append(f"–ò–º—è: {before.name} ‚Üí {after.name}")
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞
                    if before.color != after.color:
                        changes.append(f"–¶–≤–µ—Ç: {before.color} ‚Üí {after.color}")
                    
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤
                    if before.permissions != after.permissions:
                        changes.append("–ü—Ä–∞–≤–∞ –∏–∑–º–µ–Ω–µ–Ω—ã")
                        
                        # –î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∞–≤
                        old_perms = dict(before.permissions)
                        new_perms = dict(after.permissions)
                        perm_changes = {}
                        
                        for perm in old_perms:
                            if old_perms[perm] != new_perms.get(perm, False):
                                perm_changes[perm] = new_perms.get(perm, False)
                        
                        if perm_changes:
                            await logs_system.log_action(
                                action_type="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ —Ä–æ–ª–∏",
                                moderator=entry.user,
                                details=f"–†–æ–ª—å: {after.name}",
                                permissions=perm_changes,
                                reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                            )
                    
                    if changes:
                        await logs_system.log_action(
                            action_type="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏",
                            moderator=entry.user,
                            details=f"–†–æ–ª—å: {after.name}\n–ò–∑–º–µ–Ω–µ–Ω–∏—è: {'; '.join(changes)}",
                            reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                        )
                    break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏: {e}")
    
    @bot.event
    async def on_guild_update(before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            async for entry in before.audit_logs(action=discord.AuditLogAction.guild_update, limit=1):
                changes = []
                
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
                if before.name != after.name:
                    changes.append(f"–ò–º—è: {before.name} ‚Üí {after.name}")
                
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞
                if before.icon != after.icon:
                    changes.append("–ê–≤–∞—Ç–∞—Ä –∏–∑–º–µ–Ω–µ–Ω")
                
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞
                if before.banner != after.banner:
                    changes.append("–ë–∞–Ω–Ω–µ—Ä –∏–∑–º–µ–Ω–µ–Ω")
                
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                if before.verification_level != after.verification_level:
                    changes.append(f"–£—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {before.verification_level} ‚Üí {after.verification_level}")
                
                if changes:
                    await logs_system.log_action(
                        action_type="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞",
                        moderator=entry.user,
                        details=f"–ò–∑–º–µ–Ω–µ–Ω–∏—è: {'; '.join(changes)}",
                        reason=entry.reason or "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                    )
                break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä–∞: {e}")

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
@commands.command(name="logs_status")
@commands.has_permissions(administrator=True)
async def logs_status(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º"""
    logs_system = ctx.bot.moderation_logs
    
    embed = discord.Embed(
        title="üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        description="–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
        color=0x0099ff,
        timestamp=datetime.utcnow()
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –±–æ—Ç–∞
    if ctx.bot.user.display_avatar:
        embed.set_thumbnail(url=ctx.bot.user.display_avatar.url)
    
    embed.add_field(
        name="üîÑ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã",
        value="‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if logs_system.enabled else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞",
        inline=True
    )
    
    embed.add_field(
        name="üì∫ –ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        value=f"<#{logs_system.log_channel_id}>" if logs_system.log_channel else "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω",
        inline=True
    )
    
    embed.add_field(
        name="üíæ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ",
        value="‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if logs_system.backup_enabled else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ",
        inline=True
    )
    
    embed.add_field(
        name="üìù –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∑–µ—Ä–≤–µ",
        value=f"`{len(logs_system.message_backup)}`",
        inline=True
    )
    
    embed.add_field(
        name="üÜî ID –∫–∞–Ω–∞–ª–∞",
        value=f"`{logs_system.log_channel_id}`",
        inline=True
    )
    
    embed.add_field(
        name="‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
        value=f"<t:{int(datetime.utcnow().timestamp())}:R>",
        inline=True
    )
    
    embed.add_field(
        name="üìù –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
        value="""‚Ä¢ üë• **–î–µ–π—Å—Ç–≤–∏—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏** - –±–∞–Ω—ã, –∫–∏–∫–∏, –º—É—Ç—ã, —Ä–æ–ª–∏
‚Ä¢ üé≠ **–î–µ–π—Å—Ç–≤–∏—è —Å —Ä–æ–ª—è–º–∏** - —Å–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤
‚Ä¢ üì∫ **–î–µ–π—Å—Ç–≤–∏—è —Å –∫–∞–Ω–∞–ª–∞–º–∏** - —Å–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤
‚Ä¢ üí¨ **–î–µ–π—Å—Ç–≤–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏** - —É–¥–∞–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ üé® **–î–µ–π—Å—Ç–≤–∏—è —Å –º–µ–¥–∏–∞** - —ç–º–æ–¥–∑–∏, —Å—Ç–∏–∫–µ—Ä—ã, —Ä–µ–∞–∫—Ü–∏–∏
‚Ä¢ üîä **–ì–æ–ª–æ—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è** - –æ—Ç–∫–ª—é—á–µ–Ω–∏—è, –º—É—Ç—ã, –∑–∞–≥–ª—É—à–µ–Ω–∏—è
‚Ä¢ ‚öôÔ∏è **–î–µ–π—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∏–∑–º–µ–Ω–µ–Ω–∏—è""",
        inline=False
    )
    
    embed.set_footer(text=f"üÜî –ë–æ—Ç: {ctx.bot.user.id} ‚Ä¢ –ó–∞–ø—Ä–æ—Å–∏–ª: {ctx.author.name}", 
                   icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
    
    await ctx.send(embed=embed)

@commands.command(name="logs_toggle")
@commands.has_permissions(administrator=True)
async def logs_toggle(ctx):
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logs_system = ctx.bot.moderation_logs
    logs_system.enabled = not logs_system.enabled
    
    embed = discord.Embed(
        title="üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        description=f"–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è **{'–≤–∫–ª—é—á–µ–Ω–∞' if logs_system.enabled else '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}**",
        color=0x00ff00 if logs_system.enabled else 0xff0000,
        timestamp=datetime.utcnow()
    )
    
    embed.add_field(
        name="üìä –°—Ç–∞—Ç—É—Å",
        value="‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if logs_system.enabled else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞",
        inline=True
    )
    
    embed.add_field(
        name="üì∫ –ö–∞–Ω–∞–ª",
        value=f"<#{logs_system.log_channel_id}>" if logs_system.log_channel else "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω",
        inline=True
    )
    
    embed.set_footer(text=f"üÜî –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.id}", 
                   icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
    
    await ctx.send(embed=embed)

@commands.command(name="backup_toggle")
@commands.has_permissions(administrator=True)
async def backup_toggle(ctx):
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logs_system = ctx.bot.moderation_logs
    logs_system.backup_enabled = not logs_system.backup_enabled
    
    embed = discord.Embed(
        title="üíæ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
        description=f"–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ **{'–≤–∫–ª—é—á–µ–Ω–æ' if logs_system.backup_enabled else '–æ—Ç–∫–ª—é—á–µ–Ω–æ'}**",
        color=0x00ff00 if logs_system.backup_enabled else 0xff0000,
        timestamp=datetime.utcnow()
    )
    
    embed.add_field(
        name="üìä –°—Ç–∞—Ç—É—Å",
        value="‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if logs_system.backup_enabled else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ",
        inline=True
    )
    
    embed.add_field(
        name="üìù –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∑–µ—Ä–≤–µ",
        value=f"`{len(logs_system.message_backup)}`",
        inline=True
    )
    
    embed.set_footer(text=f"üÜî –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.id}", 
                   icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
    
    await ctx.send(embed=embed)

@commands.command(name="logs_test")
@commands.has_permissions(administrator=True)
async def logs_test(ctx):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logs_system = ctx.bot.moderation_logs
    
    if not logs_system.log_channel:
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description="–ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω",
            color=0xff0000,
            timestamp=datetime.utcnow()
        )
        await ctx.send(embed=embed)
        return
    
    await logs_system.log_action(
        action_type="–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã",
        moderator=ctx.author,
        target=ctx.author,
        details="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        reason="–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    )
    
    embed = discord.Embed(
        title="‚úÖ –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω",
        description="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        color=0x00ff00,
        timestamp=datetime.utcnow()
    )
    
    embed.add_field(
        name="üì∫ –ö–∞–Ω–∞–ª",
        value=f"<#{logs_system.log_channel_id}>",
        inline=True
    )
    
    embed.set_footer(text=f"üÜî –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.id}", 
                   icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
    
    await ctx.send(embed=embed)

@commands.command(name="clear_backup")
@commands.has_permissions(administrator=True)
async def clear_backup(ctx):
    """–û—á–∏—â–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logs_system = ctx.bot.moderation_logs
    count = len(logs_system.message_backup)
    logs_system.message_backup.clear()
    
    embed = discord.Embed(
        title="üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π",
        description=f"–û—á–∏—â–µ–Ω–æ **{count}** —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π",
        color=0xff8c00,
        timestamp=datetime.utcnow()
    )
    
    embed.add_field(
        name="üìù –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π",
        value=f"`{count}`",
        inline=True
    )
    
    embed.add_field(
        name="üíæ –†–∞–∑–º–µ—Ä —Ä–µ–∑–µ—Ä–≤–∞",
        value="`0`",
        inline=True
    )
    
    embed.set_footer(text=f"üÜî –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.id}", 
                   icon_url="https://cdn.discordapp.com/emojis/1234567890.png")
    
    await ctx.send(embed=embed) 